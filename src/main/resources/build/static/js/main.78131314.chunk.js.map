{"version":3,"sources":["calendar/EventDialog.js","calendar/Calendar.js","components/Alert.js","shifts/Shifts.js","friends/RequestDialog.js","friends/Friends.js","account/DeleteAccountDialog.js","account/EditAccountDialog.js","account/Account.js","Home.js","logo.svg","auth/Login.js","auth/SocialSignup.js","auth/Signup.js","shifts/Shift.js","auth/Recovery.js","auth/PasswordReset.js","auth/LoginSuccess.js","App.js","index.js"],"names":["EventDialog","props","open","onClose","date","parsedDate","Date","history","useHistory","useState","friends","setFriends","loaded","setLoaded","useEffect","fetch","toISOString","substr","method","headers","sessionStorage","getItem","then","res","ok","json","status","push","Error","result","undefined","_embedded","appUserList","error","Dialog","maxWidth","fullWidth","DialogTitle","toLocaleDateString","DialogContent","dividers","Grid","container","direction","spacing","item","Typography","variant","length","List","disablePadding","map","friend","ListItem","dense","ListItemText","primary","userInfo","name","Divider","xs","justify","alignItems","DialogActions","Button","color","onClick","useStyles","makeStyles","theme","fab","position","right","bottom","zIndex","Calendar","classes","setOpen","clickedDate","setClickedDate","changeTitle","plugins","dayGridPlugin","interactionPlugin","initialView","selectable","height","contentHeight","locale","events","shifts","shift","id","shiftId","title","start","unavailabilityStartDate","end","boardingDate","display","backgroundColor","allDay","extendedProps","group","leavingDate","unavailabilityEndDate","flat","parseEvents","dateClick","info","dateStr","Fab","className","aria-label","component","Link","to","Add","Alert","elevation","Shifts","React","checked","setChecked","snack","showSnack","shiftSuccess","setSuccess","successMsg","setSuccessMsg","errorMsg","setErrorMsg","handleToggle","currentIndex","indexOf","newChecked","splice","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","ListItemAvatar","disabled","Edit","event","preventDefault","forEach","setTimeout","catch","err","message","fetchShifts","Delete","Snackbar","autoHideDuration","severity","RequestDialog","username","setUsername","DialogContentText","TextField","autoFocus","margin","label","type","value","onChange","target","root","width","alignSelf","list","Friends","loggedUsername","requestDialog","deleteDialog","requests","setRequests","loadedFriends","setLoadedFriends","loadedRequests","setLoadedRequests","friendSuccess","newFriends","newRequests","friendRequestDTOList","toggleDialog","dialog","isAvailableNow","now","every","startDate","endDate","isBefore","isAfter","request","sourceUsername","disableGutters","targetUsername","secondary","timestamp","toLocaleString","Chip","IconButton","RemoveCircleOutline","DeleteAccountDialog","password","setPassword","EditAccountDialog","user","validationSchema","yup","max","matches","required","email","formik","useFormik","initialValues","enableReinitialize","onSubmit","values","actions","a","resetForm","handleChange","touched","Boolean","errors","helperText","handleSubmit","paper","flexDirection","header","logo","marginBottom","editButton","marginTop","deleteButton","Account","isLoaded","setIsLoaded","isSubmitting","setSubmitting","isDeleting","setDeleting","editDialog","userId","setUser","success","editAccount","newUser","body","JSON","stringify","deleteAccount","removeItem","msg","Avatar","LinearProgress","drawerWidth","menuButton","marginRight","hide","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","drawer","flexShrink","drawerHeader","padding","mixins","toolbar","justifyContent","drawerPaper","content","contentShift","Home","setTitle","match","useRouteMatch","anchorEl","setAnchorEl","setShifts","newTitle","newShifts","shiftList","toggleDrawer","key","handleMenuClose","AppBar","clsx","Toolbar","Badge","badgeContent","currentTarget","AccountCircle","keepMounted","MenuItem","Drawer","anchor","onKeyDown","ChevronLeft","url","CalendarToday","DateRange","Event","People","path","exact","social","form","submit","fb_button","blue","textTransform","fontSize","ig_button","Login","state","setState","loginSuccess","sendLogin","options","mode","setItem","get","Container","src","noValidate","autoComplete","href","startIcon","Facebook","SocialSignup","location","useLocation","params","URLSearchParams","search","socialId","registrationId","setMessage","signupSuccess","sendSignup","Yup","min","submitForm","MuiTextField","Signup","confirmPassword","oneOf","formItems","Shift","unavailableDate","setUnavailableDate","setBoardingDate","setLeavingDate","availableDate","setAvailableDate","cycleDays","setCycleDays","useCycle","setUseCycle","repeat","setRepeat","calculateCycle","cycleValue","addDays","validate","goBack","ArrowBack","Save","utils","DateFnsUtils","format","KeyboardButtonProps","differenceInCalendarDays","FormControlLabel","control","Switch","InputLabelProps","shrink","days","newDate","FormControl","InputLabel","Select","labelId","FormHelperText","alignContent","footer","Recovery","input","setInput","setDialog","PasswordReset","token","confirm","formState","send","LoginSuccess","createMuiTheme","palette","common","black","white","background","default","light","main","dark","contrastText","text","hint","typography","fontWeight","letterSpacing","PrivateRoute","children","rest","auth","render","pathname","from","App","Fragment","ThemeProvider","CssBaseline","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78131314.chunk.js","sourcesContent":["import { React, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nEventDialog.propTypes = {\n  date: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function EventDialog(props) {\n  const { open, onClose, date } = props;\n  const parsedDate = new Date(date);\n  const history = useHistory();\n\n  const [friends, setFriends] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const fetchAvailableFriends = () => {\n    fetch(\"/api/calendar/available?date=\" + parsedDate.toISOString().substr(0, 10), {\n      method: 'GET',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      } else if (res.status === 403) {\n        history.push(\"/login\");\n        return new Error(\"User not logged\");        \n      } else {\n        setFriends([]);\n        return new Error(\"Error fetching friends: \" + res.status);\n      }      \n    })\n    .then(\n      (result) => {\n        if (result._embedded === undefined) {\n          setFriends([]);\n        } else {\n          setFriends(result._embedded.appUserList);\n        }\n      },\n      (error) => {\n        setFriends([]);\n      }\n    )\n  }\n\n  useEffect(() => {\n    fetchAvailableFriends();\n    return () => setLoaded(true);\n  }, [loaded]);\n\n  return (\n    <Dialog open={open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>\n        {`Dia ${parsedDate.toLocaleDateString()}`}\n      </DialogTitle>\n      <DialogContent dividers>\n        <Grid container  direction=\"column\" spacing={3}>\n          <Grid item>\n            <Typography variant=\"subtitle1\">Amigos em terra</Typography>\n            </Grid>\n          <Grid item>\n            {friends.length === 0\n              ? <Typography variant=\"h6\">Nenhum amigo disponível</Typography>\n              : \n                <List disablePadding>\n                  {friends.map(friend => (\n                    <ListItem dense key={friend}>\n                      <ListItemText primary={friend.userInfo.name} />\n                    </ListItem>\n                  ))}\n                </List>\n            }\n          </Grid>\n          <Grid item><Divider /></Grid>          \n          <Grid item>\n            <Typography variant=\"subtitle1\">Eventos</Typography>\n          </Grid>\n          <Grid item container xs justify=\"center\" alignItems=\"center\">\n            <Typography variant=\"body1\">-</Typography>          \n          </Grid>  \n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onClose}>Fechar</Button>\n      </DialogActions>\n    </Dialog>  \n  );\n}","import { React, useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Fab, Grid, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport EventDialog from './EventDialog';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n      position: 'fixed',\n      right: '20px',\n      bottom: '20px',\n      zIndex: 100\n  }\n}));\n\nexport default function Calendar(props) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [clickedDate, setClickedDate] = useState(new Date().toISOString());\n\n    const closeDialog = () => {\n        setOpen(false);\n    }\n\n    // Handlers\n    const handleDayClick = (info) => {\n        setClickedDate(info.dateStr);\n        setOpen(true);\n    }\n\n    // Changes parent title\n    useEffect(() => {\n        props.changeTitle(\"Calendário\");\n    }, [])\n\n    // Parses Shift objects to FullCalendars's Event objects\n    // Shifts are assumed to always be a Shift array/list\n    const parseEvents = (props) => {\n        var events = props.shifts.map(shift => {            \n            var unavailable = {\n                id: shift.shiftId,\n                title: \"Pré-embarque\",\n                start: shift.unavailabilityStartDate,\n                end: shift.boardingDate,\n                display: \"block\",\n                backgroundColor: \"rgb(255,92,0)\",\n                allDay: \"true\",\n                extendedProps: {\n                    group: shift.shiftId\n                }\n            };\n\n            var onBoard = {\n                id: \"board\" + shift.shiftId,\n                title: \"A bordo\",\n                start: shift.boardingDate,\n                end: shift.leavingDate,\n                display: \"block\",\n                backgroundColor: \"rgb(170,0,0)\",\n                allDay: \"true\",\n                extendedProps: {\n                    group: shift.shiftId\n                }\n            };\n\n            var available = {\n                id: \"available\" + shift.shiftId,\n                title: \"Pós-embarque\",\n                start: shift.leavingDate,\n                end: shift.unavailabilityEndDate,\n                display: \"block\",\n                backgroundColor: \"rgb(0,185,185)\",\n                allDay: \"true\",\n                extendedProps: {\n                    group: shift.shiftId\n                }             \n            }\n\n            return [unavailable, onBoard, available];\n        });\n        \n        return events.flat();\n    }\n\n\n    return (\n      <Grid container spacing={3}>\n        <Grid item>\n          <FullCalendar\n            plugins={[ dayGridPlugin, interactionPlugin ]}\n            initialView=\"dayGridMonth\"\n            selectable={true}\n            height=\"auto\"\n            contentHeight=\"auto\"\n            locale=\"pt-br\"\n            events={parseEvents(props)}\n            dateClick={handleDayClick}\n          />\n        </Grid>\n          <Fab\n            className={classes.fab} \n            variant=\"extended\"\n            color=\"primary\" \n            aria-label=\"add\"\n            component={Link}\n            to=\"/shift\"\n          >\n            <Add />\n            Escala\n          </Fab>\n        <EventDialog open={open} onClose={closeDialog} date={clickedDate} />\n      </Grid>\n    );\n}","import React from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport default function Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Alert from 'components/Alert.js';\nimport { Snackbar, Checkbox, Fab, Grid, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport { Add, Delete, Edit } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nexport default function Shifts(props) {\n    const history = useHistory();\n    \n    // Shift selection state (through checkbox)\n    const [checked, setChecked] = React.useState([0]);\n    \n    // Snack state\n    const [snack, showSnack] = useState(false);\n    const [shiftSuccess, setSuccess] = useState(false);\n    const [successMsg, setSuccessMsg] = useState(\"Sucesso!\");\n    const [errorMsg, setErrorMsg] = useState(\"\");\n\n    // Changes parent title\n    useEffect(() => {\n        props.changeTitle(\"Escalas\");\n    }, [])\n    \n    // Shift deletion state\n    const successDeleteMsg = \"Escala(s) deletada(s)!\";\n    \n    const deleteShift = (event) => {\n        event.preventDefault();\n        //validate();\n\n        if (checked.length === 1) {\n            setSuccess(false);\n            setErrorMsg(\"Nenhuma escala selecionada!\");\n            showSnack(true);\n            return;\n        }\n\n        checked.forEach(id => {          \n            if (id === 0) return;             \n            fetch(\"/api/shift/remove?id=\" + id, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    'Authorization': sessionStorage.getItem(\"token\")\n                }\n            })\n            .then(res => {\n                switch (res.status) {\n                    case 204:\n                      setSuccess(true);\n                      setSuccessMsg(successDeleteMsg);\n                      showSnack(true);\n                      setTimeout(() => { history.push('/home/shifts'); }, 2000);\n                      break;\n                    case 403:\n                      history.push('/login');                    \n                      throw new Error('Usuário não logado!');\n                    case 404:\n                      throw new Error('Escala não encontrada no servidor!');\n                    default:\n                      throw new Error('Unexpected server response: ' + res.status);\n                }\n            })\n            .catch(err => {\n                setSuccess(false);\n                setErrorMsg(err.message);\n                showSnack(true);\n            });\n        });\n\n        // Forces reloading of shifts after modification\n        props.fetchShifts();\n    };\n\n\n    // Handles the toggling of list items\n    const handleToggle = (shift) => () => {\n        const currentIndex = checked.indexOf(shift.shiftId);\n        const newChecked = [...checked];\n\n        \n        if (currentIndex === -1) {\n            newChecked.push(shift.shiftId);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        \n        setChecked(newChecked);\n    };\n\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"stretch\">\n            <Grid container justify=\"center\">\n                <List>\n                    {props.shifts === null ? [] : props.shifts.map(shift => (\n                        <ListItem key={shift} button onClick={handleToggle(shift)}>\n                            <ListItemIcon>\n                                <Checkbox\n                                    edge=\"start\"\n                                    checked={checked.indexOf(shift.shiftId) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                />\n                            </ListItemIcon>\n                            <ListItemAvatar>\n                                <Typography variant=\"h6\">\n                                    {shift.shiftId}\n                                </Typography>\n                            </ListItemAvatar>\n                            <ListItemText \n                                primary={`de ${shift.unavailabilityStartDate} até ${shift.unavailabilityEndDate}`}\n                            />                        \n                        </ListItem>\n                    ))}\n                </List>\n            </Grid>\n            <Grid container justify=\"flex-end\">\n                <Fab \n                    color=\"primary\" \n                    aria-label=\"add\"\n                    component={Link}\n                    to=\"/shift\"\n                >\n                    <Add />\n                </Fab>\n                <Fab color=\"default\" disabled={true} aria-label=\"edit\">\n                    <Edit />\n                </Fab>\n                <Fab color=\"secondary\" aria-label=\"delete\" onClick={deleteShift}>\n                    <Delete />\n                </Fab>\n            </Grid>\n            <Grid>\n                <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n                            {shiftSuccess\n                                ? <Alert severity=\"success\">{successMsg}</Alert>\n                                : <Alert severity=\"error\" >{errorMsg}</Alert>\n                            }\n                </Snackbar>\n            </Grid>\n        </Grid>\n        );\n}","import { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from '@material-ui/core';\n\nexport default function RequestDialog(props) {\n  const { onClose, open } = props;\n  const [username, setUsername] = useState(\"\");\n  \n  const submit = (event) => {\n    onClose(username);\n  }\n\n  const cancel = () => {\n    onClose(\"\");\n  }\n\n  const handleChange = (event) => {\n    setUsername(event.target.value);\n  }\n\n  return (\n    <Grid container>\n      <Dialog open={open}>\n        <DialogTitle>Requisitar amizade</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Digite abaixo o nome de usuário que deseja adicionar como amigo.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"username\"\n            label=\"Nome de usuário\"\n            type=\"text\"\n            value={username}\n            fullWidth\n            onChange={handleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={submit}>Requisitar</Button>\n          <Button color=\"primary\" onClick={cancel}>Cancelar</Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n\nRequestDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};","import {React, useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useHistory} from 'react-router-dom';\nimport { Snackbar, Button, Dialog, DialogActions, DialogTitle, Fab, Grid, IconButton, List, ListItem, ListItemIcon, ListItemText, Divider, Chip } from '@material-ui/core';\nimport { Add, RemoveCircleOutline} from '@material-ui/icons';\nimport Alert from '../components/Alert';\nimport RequestDialog from './RequestDialog';\nimport { isAfter, isBefore } from 'date-fns';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 800,\n    alignSelf: \"center\"\n  },\n  list: {\n  }\n}));\n\nexport default function Friends(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  // Needed for filtering the requests from the server\n  const loggedUsername = sessionStorage.getItem('loggedUsername');\n  \n  // Dialog state\n  const [open, setOpen] = useState({\n    requestDialog: false,\n    deleteDialog: false,\n  });\n  \n  // Friends state\n  const [friends, setFriends] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [loadedFriends, setLoadedFriends] = useState(false);\n  const [loadedRequests, setLoadedRequests] = useState(false);\n  \n  // Snack state\n  const [snack, showSnack] = useState(false);\n  const [friendSuccess, setSuccess] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(\"Sucesso!\");\n  const [errorMsg, setErrorMsg] = useState(\"\");  \n\n  // Changes parent title\n  useEffect(() => {\n    props.changeTitle(\"Amigos\");\n  }, [])\n  \n  // API interaction functions\n  const requestFriendship = (username) => {\n    if (username !== null && username !== \"\") {\n      fetch(\"/api/friend/request?username=\" + username, {\n        method: 'POST',\n        headers: {\n          'Authorization': sessionStorage.getItem('token')\n        }\n      })\n      .then(\n        (res) => {\n          switch (res.status) {\n            case 201:\n              setSuccessMsg('Amizade requisitada! Aguardando aprovação...');\n              setSuccess(true);\n              showSnack(true);\n              break;\n            case 403:\n              history.push('/login');\n              break;\n            case 400:\n              setErrorMsg('Não é possível ser amigo de si mesmo! Tente novamente.');\n              setSuccess(false);\n              showSnack(true);\n              break;\n            case 404:\n              setErrorMsg('Usuário não encontrado!');\n              setSuccess(false);\n              showSnack(true);\n              break;\n            default:\n              setErrorMsg('Resposta inesperada do servidor: ' + res);\n              setSuccess(false);\n              showSnack(true);\n          }\n        },\n        (error) => {\n          setErrorMsg(error.message);\n          setSuccess(false);\n          showSnack(true);\n        }\n      );\n    }\n\n    setLoadedRequests(false);\n\n    // Closes dialog\n    setOpen({ ...open, requestDialog: false});\n  }\n\n  const acceptFriend = (username) => (event) => {\n    fetch(\"/api/friend/accept?username=\" + username, {\n      method: 'POST',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(\n      (result) => {\n        switch (result.status) {\n          case 200:\n            setSuccessMsg('Amizade aceita!');\n            setSuccess(true);\n            showSnack(true);\n            break;\n          case 403:\n            history.push('/login');\n            return;\n          default:\n            setErrorMsg(\"Resposta inesperada do servidor\" + result.status);\n            setSuccess(false);\n            showSnack(true);\n        }\n      },\n      (error) => {\n        setErrorMsg(error.message);\n        setSuccess(false);\n        showSnack(true);\n      }\n    );\n\n    setLoadedFriends(false);\n    setLoadedRequests(false);\n  }\n  \n  const unfriend = (username) => (event) => {\n    fetch(\"/api/friend/remove?username=\" + username, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(\n      (res) => {\n        if (res.status === 204) {\n          setSuccess(true);\n          setSuccessMsg('Amizade desfeita com sucesso!');\n          showSnack(true);\n        } else if (res.status === 403) {\n          history.push(\"/login\");\n          return;\n        } else {\n          setErrorMsg('Resposta inesperada do servidor: ' + res.status);\n          setSuccess(false);\n          showSnack(true);\n        }\n      },\n      (error) => {\n        setErrorMsg(error.message);\n        setSuccess(false);\n        showSnack(true);\n      }\n    );\n\n    // Refetch friends\n    setLoadedFriends(false);\n\n    // Closes delete dialog\n    setOpen({ ...open, deleteDialog: false});\n  };\n\n  \n  \n  // Fetches friends from API\n  const fetchFriends = () => {\n    fetch(\"/api/friend\", {\n      method: 'GET',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(res => {\n      if (res.ok) {\n        return res;\n      } else if (res.status === 403) {\n        history.push(\"/login\");\n        return new Error(\"Forbidden\");        \n      } else {\n        return new Error('Unexpected response status: ' + res.status);\n      }\n    })\n    .then(res => res.json())\n    .then(\n      (result) => {\n        const newFriends = result._embedded;\n        if (newFriends === undefined) {\n          setFriends([]);\n        } else {\n          setFriends(newFriends.appUserList);\n        }\n      },\n      (error) => {\n        setFriends([]);\n      }\n    )\n  }\n    \n  // Fetches friend requests from API\n  const fetchRequests = () => {\n    fetch('/api/friend/request', {\n      method: 'GET',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(res => {\n      switch (res.status) {\n        case 200:\n          return res.json();\n        case 403:\n          history.push('/login');\n          return new Error(\"User not logged\");\n        default:\n          return new Error(res);\n      }\n    })\n    .then(\n      (result) => {\n        const newRequests = result._embedded;\n        if (newRequests === undefined) {\n          setRequests([]);\n        } else {\n          setRequests(newRequests.friendRequestDTOList);\n        }\n      }, \n      (error) => {\n        setRequests([]);\n      }\n    )\n  }\n  \n  // Fetches state from API\n  useEffect(() => {\n    fetchFriends();\n    setLoadedFriends(true);\n  }, [loadedFriends])\n  \n  useEffect(() => {\n    fetchRequests();\n    setLoadedRequests(true);\n  }, [loadedRequests])\n  \n  const toggleDialog = (dialog, open) => (event) => {\n    setOpen({ ...open, [dialog]: open });\n  }\n  \n  // Returns true if today is outside the shifts, or false if it is inside\n  const isAvailableNow = (shifts) => {\n    const now = Date.now();\n    return shifts.every((shift) => {\n      const startDate = new Date(shift.unavailabilityStartDate);\n      const endDate = new Date(shift.unavailabilityEndDate);\n\n      return isBefore(now, startDate) && isAfter(now, endDate);\n    })\n  }\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"stretch\" justify=\"flex-start\">\n        <List className={classes.root}>\n          {requests.map(request => (\n            request.sourceUsername === loggedUsername\n            ?\n            <ListItem alignItems=\"center\" disableGutters button key={request}> \n                <ListItemText\n                  primary={request.targetUsername}\n                  secondary={`Requisitado em ${new Date(request.timestamp).toLocaleString()}`}\n                  />                  \n                <Button color=\"primary\">aguardando aprovação</Button>\n            </ListItem>\n            :\n            <ListItem alignItems=\"center\" disableGutters button key={request}> \n                <ListItemText\n                  primary={request.sourceUsername}\n                  secondary={`Requisitado em ${new Date(request.timestamp).toLocaleString()}`}\n                />    \n                <Button color=\"primary\" onClick={acceptFriend(request.sourceUsername)}>Aceitar</Button> \n            </ListItem>\n          ))}\n        </List>\n        <Divider className={classes.root} />\n        <List className={classes.root}>\n          {friends.map(friend => (\n            <ListItem alignItems=\"center\" disableGutters button key={friend}>\n              <ListItemText          \n                primary={friend.userInfo.name}\n                secondary={friend.userInfo.username}\n              />\n              <ListItemText>\n                {isAvailableNow(friend.shifts) \n                ? <Chip color=\"primary\" label=\"Disponível\" />\n                : <Chip color=\"secondary\" label=\"Embarcado\" />\n                }\n              </ListItemText>\n              <ListItemIcon edge=\"end\">\n                <IconButton onClick={toggleDialog('deleteDialog', true)}>\n                  <RemoveCircleOutline color=\"error\" />\n                </IconButton>\n              </ListItemIcon>\n              <Dialog open={open['deleteDialog']}>\n                <DialogTitle>\n                  Deseja desfazer a amizade?\n                </DialogTitle>\n                <DialogActions>\n                  <Button autoFocus color=\"primary\" onClick={unfriend(friend)}>\n                    Aceitar\n                  </Button>\n                  <Button color=\"primary\" onClick={toggleDialog('deleteDialog', false)}>\n                    Cancelar\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </ListItem>\n          ))}\n        </List>\n      <Grid container justify=\"flex-end\">\n        <Fab color=\"primary\" aria-label=\"add\" onClick={toggleDialog('requestDialog', true)}>\n          <Add />\n        </Fab>\n      </Grid>\n      <Grid>\n          <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n            {friendSuccess\n              ? <Alert severity=\"success\">{successMsg}</Alert>\n              : <Alert severity=\"error\" >{errorMsg}</Alert>\n          }\n        </Snackbar>\n      </Grid>\n      <RequestDialog onClose={requestFriendship} open={open.requestDialog}/>\n    </Grid>\n  );\n\n \n}","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from \"@material-ui/core\";\n\nexport default function DeleteAccountDialog(props) {\n  const { onClose, open } = props;\n  const [password, setPassword] = useState(\"\");\n\n  const submit = () => {\n    onClose(password);\n  }\n\n  const cancel = () => {\n    onClose(\"\");\n  }\n\n  const handleChange = (event) => {\n    setPassword(event.target.value);\n  }\n\n  return (\n    <Grid container>\n      <Dialog open={open}>\n        <DialogTitle>Tem certeza que deseja deletar sua conta?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Esta ação é permanente. Para confimar, digite sua senha abaixo:</DialogContentText>\n          <TextField\n            fullWidth\n            type=\"password\"\n            label=\"Senha\"\n            value={password}\n            onChange={handleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={cancel}>Cancelar</Button>\n          <Button onClick={submit}>Deletar</Button>\n        </DialogActions>\n      </Dialog>      \n    </Grid>\n  );\n}\n\nDeleteAccountDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};","import React, {  } from \"react\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, TextField } from \"@material-ui/core\";\n\n\nexport default function EditAccountDialog(props) {\n  const { onClose, open, user } = props;\n\n  const cancel = () => {\n    onClose(null);\n  }\n\n  const validationSchema = yup.object({\n    name: yup.string()\n      .max(60, \"Deve ter 60 caracteres ou menos\")\n      .matches(/^([^0-9{}\\\\/()\\]\\[]*)$/, \"Nome inválido\")\n      .required(\"Obrigatório\"),\n    email: yup.string()\n      .email(\"E-mail inválido\")\n      .required(\"Obrigatório\"),\n  })\n\n  const formik = useFormik({\n    initialValues: {\n      name: user.name,\n      email: user.email\n    },\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: async (values, actions) => {\n      await onClose({\n        name: values.name,\n        email: values.email\n      })\n      actions.resetForm();\n    }\n  })\n\n  return (\n    <Grid container>\n      <Dialog open={open}>\n        <DialogTitle>Editar Conta</DialogTitle>\n        <DialogContent>\n          <Grid container direction=\"column\">\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                label=\"Nome\"\n                name=\"name\"\n                id=\"name\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                error={formik.touched.name && Boolean(formik.errors.name)}\n                helperText={formik.touched.name && formik.errors.name}\n              />\n              <TextField \n                variant=\"outlined\"\n                margin=\"normal\"\n                label=\"E-mail\"\n                name=\"email\"\n                id=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel}>Cancelar</Button>\n          <Button onClick={formik.handleSubmit}>Salvar</Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Avatar, Button, Divider, Grid, LinearProgress, makeStyles, Snackbar, TextField, Typography } from \"@material-ui/core\";\nimport { useHistory } from 'react-router';\nimport DeleteAccountDialog from './DeleteAccountDialog';\nimport Alert from 'components/Alert';\nimport EditAccountDialog from './EditAccountDialog';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  header: {\n    alignSelf: 'center'\n  },\n  logo: {\n    marginBottom: theme.spacing(3)\n  },\n  editButton: {\n    marginTop: theme.spacing(3)\n  },\n  deleteButton: {\n    backgroundColor: \"red\",\n    color: \"white\",\n    marginTop: theme.spacing(2)\n  }\n}))\n\n\nexport default function Account(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [isDeleting, setDeleting] = useState(false);\n\n  const [open, setOpen] = useState({\n    editDialog: false,\n    deleteDialog: false,\n  });\n\n  const [user, setUser] = useState({\n    userId: \"\",\n    name: \"\",\n    username: \"\",\n    email: \"\"\n  });\n\n  // Snack state\n  const [snack, showSnack] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(\"Sucesso!\");\n  const [errorMsg, setErrorMsg] = useState(\"\");  \n\n  // Changes parent title\n  useEffect(() => {\n    props.changeTitle('Minha Conta');\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/user/me\", {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": sessionStorage.getItem(\"token\"),\n      }\n    }).then(\n      (res) => {\n        switch (res.status) {\n          case 200:\n            return res;\n          case 403:\n            history.push(\"/login\");\n            return;\n          default:\n            setSuccess(false);\n            setErrorMsg(\"Não foi possível recuperar seus dados! Erro: \" + res.status);\n            showSnack(true);\n        }\n      },\n      (error) => {\n        setErrorMsg(error.message);\n        setSuccess(false);\n        showSnack(true);\n      }\n    )\n    .then(res => res.json())\n    .then(\n      (res) => {\n        setUser({\n          userId: res.userId,\n          name: res.userInfo.name,\n          username: res.userInfo.username,\n          email: res.userInfo.email\n        });\n      },\n      (error) => {\n        setErrorMsg(error.message);\n        setSuccess(false);\n        showSnack(true);\n      }\n    );\n    setIsLoaded(true);\n  }, [isLoaded])\n\n  const editAccount = async (newUser) => {\n    if (newUser !== null) {\n      setSubmitting(true);\n      \n      await fetch(\"/api/user\", {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": sessionStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user.userId,\n          name: newUser.name,\n          email: newUser.email\n        })\n      })\n      .then(\n        (res) => {\n          switch (res.status) {\n            case 200:\n              setSuccessMsg(\"Usuário editado com sucesso!\");\n              setSuccess(true);\n              showSnack(true);              \n              break;\n            case 403:\n              history.push(\"/login\");\n              break;\n            case 409:\n              setSuccess(false);\n              setErrorMsg(\"O email já existe! Por favor, escolha outro!\");\n              showSnack(true);\n              break\n            default:\n              setSuccess(false);\n              setErrorMsg(\"Erro inesperado do servidor: \" + res.status);\n              showSnack(true);\n          }\n        },\n        (error) => {\n          setSuccess(false);\n          setErrorMsg(error.message);\n          showSnack(true);\n        }\n      );\n      setSubmitting(false);\n    }\n\n    setIsLoaded(false);    \n    setOpen({...open, editDialog: false})\n  }\n  \n  const deleteAccount = async (password) => {\n    if (password !== null || password !== \"\") {\n      setDeleting(true);\n\n      await fetch(\"/api/user/delete\", {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": sessionStorage.getItem(\"token\"),\n          \"Password\": password \n        }\n      })\n      .then(\n        (res) => {\n          switch (res.status) {\n            case 204:\n              setSuccess(true);\n              setSuccessMsg(\"Conta deletada com sucesso!\")\n              showSnack(true);\n              \n              sessionStorage.removeItem(\"token\");\n              sessionStorage.removeItem(\"loggedUsername\");\n              history.push(\"/login\");\n              break;\n            case 403:\n              history.push(\"/login\");\n              setSuccess(false);\n              setErrorMsg(\"Deleção não autorizada\");\n              showSnack(true);\n              break;\n            default:\n              setSuccess(false);\n              setErrorMsg(\"Erro ao deletar: \" + res.status);\n              showSnack(true);\n          }\n        },\n        (error) => {\n          setSuccess(false);\n          setErrorMsg(error.msg);\n          showSnack(true);\n        }\n      )\n    }\n    \n    setDeleting(false);\n    setOpen({ ...open, deleteDialog: false });\n  };\n\n  const openDeleteDialog = () => {\n    setOpen({...open, deleteDialog: true})\n  }\n\n  const openEditDialog = () => {\n    setOpen({...open, editDialog: true})\n  }\n\n  return (\n    <Grid container spacing={3} direction=\"column\" alignItems=\"stretch\">\n      <Grid container item direction=\"column\" alignItems=\"center\">\n        <Avatar className={classes.logo}/>\n        <Typography variant=\"h6\">\n          {user.username}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"subtitle1\">\n          Meus dados\n        </Typography>\n        <Divider />\n        <Grid direction=\"column\" container item>\n          <Grid container direction=\"row\">\n            <TextField\n              fullWidth\n              disabled\n              variant=\"outlined\"\n              margin=\"normal\"\n              label=\"Nome\"\n              value={user.name}\n            />\n          </Grid>\n          <Grid container direction=\"row\">\n            <TextField\n              fullWidth\n              disabled\n              variant=\"outlined\"\n              margin=\"normal\"\n              label=\"E-mail\"\n              value={user.email}\n            />\n          </Grid>\n        </Grid>\n        {isSubmitting && <LinearProgress />}\n        <Button\n          disabled={isSubmitting}\n          fullWidth\n          className={classes.editButton}\n          onClick={openEditDialog}\n          variant=\"contained\" \n          color=\"primary\"          \n        >\n          Editar Dados\n        </Button>\n        <EditAccountDialog onClose={editAccount} open={open.editDialog} user={user}/>\n      </Grid>\n      <Grid item>\n        <Divider />\n        {isDeleting && <LinearProgress />}\n        <Button\n          disabled={isDeleting}\n          fullWidth   \n          className={classes.deleteButton}\n          variant=\"contained\"\n          color=\"error\"\n          onClick={openDeleteDialog}\n        >\n          Apagar Conta\n        </Button>\n        <DeleteAccountDialog onClose={deleteAccount} open={open.deleteDialog}/>\n      </Grid>\n      <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n          {success\n            ? <Alert severity=\"success\">{successMsg}</Alert>\n            : <Alert severity=\"error\" >{errorMsg}</Alert>\n        }\n      </Snackbar>\n    </Grid>\n  );\n}","import {React, useEffect, useState} from 'react';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Drawer from '@material-ui/core/Drawer';\nimport { Divider, List, ListItem, ListItemIcon, ListItemText, Menu, MenuItem } from '@material-ui/core';\nimport { AccountCircle, CalendarToday, ChevronLeft, DateRange, Event, People } from '@material-ui/icons';\n\nimport Calendar from './calendar/Calendar.js';\nimport { Link, Route, Switch, Redirect, useRouteMatch, useHistory } from 'react-router-dom';\nimport Shifts from './shifts/Shifts.js';\nimport Friends from './friends/Friends.js';\nimport Account from 'account/Account.js';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n        display:'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      //marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));\n\nexport default function Home() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [title, setTitle] = useState(\"Minha Escala\");\n\n    // Allows use of relative paths for nested contents\n    let match = useRouteMatch();\n    \n    // Drawer state\n    const [open, setOpen] = useState(false);\n\n    // Menu state\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    // Shifts state\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [shifts, setShifts] = useState([]);\n\n    // Helper functions\n    const changeTitle = (newTitle) => {\n      setTitle(newTitle);\n    }\n\n    const redirectAccount = () => {\n      history.push(\"/home/account\");\n    }\n\n    const logout = () => {\n      // Cleans session storage\n      sessionStorage.removeItem(\"token\");\n      sessionStorage.removeItem(\"loggedUsername\");\n      \n      // Redirects to login\n      history.push(\"/login\");\n\n      handleMenuClose();\n    }\n\n    const fetchShifts = () => {\n      fetch(\"/api/shift\", {\n        method: 'GET',\n        headers: {          \n          'Authorization': sessionStorage.getItem(\"token\")\n        }\n      })\n      .then(res => {\n        if (res.status === 403) {\n          history.push(\"/login\");\n          return new Error(\"User not logged\");\n        } else if (res.ok) {\n          return res;\n        }\n      })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          const newShifts = result._embedded;\n          if (newShifts === undefined) {\n            setShifts([]);\n          } else {\n            setShifts(newShifts.shiftList)\n          }\n          setIsLoaded(true);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setShifts([]);\n        }\n      );\n    }\n\n    useEffect(() => {\n      fetchShifts();\n      setIsLoaded(true);\n    }, [isLoaded]);\n\n\n    // Drawer handler\n    const toggleDrawer = (open) => (event) => {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n      }\n      \n      setOpen(open);\n    }\n\n    // Account menu handlers\n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    }\n\n    const handleMenuClose = () => {\n      setAnchorEl(null);\n    }\n\n    return (\n        <div className='root'>\n            <AppBar \n                position=\"absolute\" \n                className={clsx(classes.appBar, open && classes.appBarShift)}\n            >\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open menu\"\n                        onClick={toggleDrawer(true)}\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                      {title}   \n                    </Typography>\n                    <IconButton color=\"inherit\" >\n                        <Badge badgeContent={0} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                    <IconButton color=\"inherit\" onClick={handleMenu}>\n                      <AccountCircle id=\"account-circle\"/>\n                    </IconButton>\n                    <Menu \n                      id=\"menu-account\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={Boolean(anchorEl)}\n                      onClose={handleMenuClose}\n                    >\n                      <MenuItem disabled>\n                        {sessionStorage.getItem(\"loggedUsername\")}\n                      </MenuItem>\n                      <Divider />\n                      <MenuItem onClick={redirectAccount}>\n                        Minha Conta\n                      </MenuItem>\n                      <MenuItem onClick={logout}>\n                        Logout\n                      </MenuItem>                      \n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"temporary\"\n                anchor=\"left\"\n                open={open}\n                className={classes.drawer}\n                classes={{\n                    paper: classes.drawerPaper\n                }}\n                onKeyDown={toggleDrawer(false)}\n                onClick={toggleDrawer(false)}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton\n                        onClick={toggleDrawer(false)}\n                    >\n                        <ChevronLeft />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List onClick={toggleDrawer(false)}>\n                    <ListItem button key=\"calendar\"\n                      component={Link}\n                      to={`${match.url}/calendar`}\n                    >\n                        <ListItemIcon><CalendarToday /></ListItemIcon>\n                        <ListItemText primary=\"Calendário\"/>\n                    </ListItem>\n                    <ListItem button key=\"shifts\"\n                      component={Link}\n                      to={`${match.url}/shifts`}\n                    >\n                        <ListItemIcon><DateRange /></ListItemIcon>\n                        <ListItemText primary=\"Escalas\"/>\n                    </ListItem>\n                    <ListItem button key=\"events\"\n                      component={Link}\n                      to={`${match.url}/events`}\n                    >\n                        <ListItemIcon><Event /></ListItemIcon>\n                        <ListItemText primary=\"Eventos\"/>\n                    </ListItem>\n                    <ListItem button key=\"friends\"\n                      component={Link}\n                      to={`${match.url}/friends`}\n                    >\n                        <ListItemIcon><People /></ListItemIcon>\n                        <ListItemText primary=\"Amigos\"/>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <div className={classes.drawerHeader} />\n            <main className={classes.content}>\n              <Switch>\n                <Route path={`${match.path}/calendar`}>                  \n                  <Calendar shifts={shifts} changeTitle={changeTitle}/>\n                </Route>                \n                <Route path={`${match.path}/shifts`}>\n                  <Shifts shifts={shifts} fetchShifts={fetchShifts} changeTitle={changeTitle} />\n                </Route>\n                <Route path={`${match.path}/events`}>                  \n                </Route>\n                <Route path={`${match.path}/friends`}>\n                  <Friends changeTitle={changeTitle} />\n                </Route>                \n                <Route exact path={match.path}>\n                  <Redirect to={`${match.path}/calendar`} />\n                </Route>\n                <Route exact path={`${match.path}/account`}>\n                  <Account changeTitle={changeTitle} />\n                </Route>\n              </Switch>\n            </main>\n          </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo.2d757cfc.svg\";","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'components/Alert'\nimport { Avatar, Button, Divider, LinearProgress, Link, makeStyles, Snackbar, TextField, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport logo from 'logo.svg';\nimport { Facebook, Instagram } from '@material-ui/icons';\nimport { blue } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    social: {\n      marginBottom: theme.spacing(6),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    logo: {\n        width: theme.spacing(14),\n        height: theme.spacing(14),\n        margin: theme.spacing(1)\n    },\n    fb_button: {\n      marginTop: theme.spacing(2),\n      color: 'white',\n      backgroundColor: blue[900],\n      textTransform: 'none',\n      fontSize: 18\n    },\n    ig_button: {\n      marginTop: theme.spacing(2),\n      color: 'white',\n      textTransform: 'none',\n      backgroundColor: 'purple',\n      fontSize: 18\n    }\n}));\n\nexport default function Login() {    \n    const classes = useStyles();\n    const history = useHistory();\n\n    const [state, setState] = useState({\n      username: \"\",\n      password: \"\"\n    })\n    const [isSubmitting, setSubmitting] = useState(false);\n\n    // Snack state\n    const successMsg = \"Login com sucesso!\";\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [loginSuccess, setSuccess] = useState(false);\n    const [snack, showSnack] = useState(false);\n\n    const redirectSignup = () => {\n        history.push('/signup');\n    }\n\n    const redirectRecovery =() => {\n        history.push('/recovery');\n    }\n\n    const sendLogin = async () => {\n        const url = \"/login\";\n        const options = {\n            method: 'POST',\n            mode: 'no-cors',              \n            body: JSON.stringify({\n                username: state.username,\n                password: state.password\n            })\n        };\n\n        await fetch(url, options)\n        .then(\n            (res) => {\n              switch (res.status) {\n                case 200:\n                  sessionStorage.setItem(\"token\", res.headers.get(\"Authorization\"));\n                  sessionStorage.setItem(\"loggedUsername\", state.username);\n                  setSuccess(true);\n                  showSnack(true);\n                  setTimeout(() => {\n                    history.push(\"/home\");\n                  }, 500);\n                  break;\n                case 403:\n                  setSuccess(false);\n                  setErrorMsg(\"Usuário ou senha incorretos!\");\n                  showSnack(true);\n                  break;\n                case 401:\n                  setSuccess(false);\n                  setErrorMsg(\"Usuário ou senha incorretos!\");\n                  showSnack(true);\n                  break;\n                case 500:\n                  setSuccess(false);\n                  setErrorMsg(\"Algo deu errado em nosso servidor!\");\n                  showSnack(true);\n                  break;\n                default:\n                  setSuccess(false);\n                  setErrorMsg(\"Erro inesperado do servidor: \" + res.status);\n                  showSnack(true);\n              }\n            },\n            (error) => {\n              setErrorMsg(error);\n              showSnack(true);\n            }\n        )            \n    };\n\n    const handleChange = (event) => {\n      const name = event.target.name;\n      const value = event.target.value;\n      setState({\n        ...state,\n        [name]: value\n      });\n    }\n      \n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setSubmitting(true);\n        await sendLogin();\n        setSubmitting(false);\n    };\n    \n    if (sessionStorage.getItem('token') !== null) {\n      history.push(\"/home\");\n    }\n    \n    return(\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Avatar\n                    className={classes.logo}\n                    src={logo}\n                />\n                <Typography variant=\"h3\">\n                    Agenda Marítima\n                </Typography>\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Nome de Usuário ou Email\"\n                        name=\"username\"\n                        autoFocus\n                        autoComplete=\"email\"\n                        value={state.username}\n                        onChange={handleChange}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Senha\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={state.password}\n                        onChange={handleChange}\n                    />\n                    { isSubmitting && <LinearProgress />}           \n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant='contained'\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        className={classes.submit}                 \n                    >\n                        Entrar\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\" onClick={redirectRecovery}>\n                                Esqueceu sua senha?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\" onClick={redirectSignup}>\n                                {\"Não tem uma conta? Cadastre-se!\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n                        {loginSuccess\n                            ? <Alert severity=\"success\">{successMsg}</Alert>\n                            : <Alert severity=\"error\" >{errorMsg}</Alert>\n                        }                       \n                </Snackbar>\n            </div>\n            <Divider />\n            <div className={classes.social}>\n              <Button\n                className={classes.fb_button}\n                fullWidth\n                variant='contained'\n                startIcon={<Facebook />}\n                href=\"oauth2/authorization/facebook\"\n              >\n                Continue com Facebook\n              </Button>\n            </div>\n        </Container>\n    );\n}\n\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Alert from '../components/Alert';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Avatar, Button, Grid, LinearProgress, makeStyles, Snackbar, Typography } from '@material-ui/core';\nimport { TextField as MuiTextField } from 'formik-material-ui';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from \"yup\";\nimport logo from 'logo.svg';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(6),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),        \n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logo: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n    margin: theme.spacing(1)\n  }\n}));\n\n\nexport default function SocialSignup() {    \n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n\n    const params = new URLSearchParams(location.search);\n    const name = params.get('name');\n    const email = params.get('email');\n    const socialId = params.get('socialId');\n    const registrationId = params.get('registrationId');\n    \n    // Dialog state\n    const[message, setMessage] = useState(\"Erro crítico!\");\n    const[signupSuccess, setSuccess] = useState(false);\n    const[snack, showSnack] = useState(false);\n\n    const redirectLogin = () => {\n      history.push(\"/login\");\n    }\n    \n    const sendSignup =  async (values) => {\n        const url = \"/api/user/socialSignup\";\n        const options = {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json' \n            },    \n            body: JSON.stringify({\n                name: values.name,\n                email: values.email,                \n                username: values.username,\n                socialId: socialId,\n                registrationId: registrationId\n            })\n        };\n        \n        await fetch(url, options)\n        .then(\n          (res) => {\n            switch (res.status) {\n              case 201:\n                sessionStorage.setItem(\"token\", res.headers.get(\"Authorization\"));\n                sessionStorage.setItem(\"loggedUsername\", values.username);\n                setSuccess(true);\n                setMessage(\"Usuário criado com sucesso! Redirecionando...\")\n                showSnack(true);\n                setTimeout(() => { history.push('/'); }, 2000);\n                break;\n              case 400:\n                setSuccess(false);\n                setMessage(\"Dados da solicitação estão incorretos! Por favor, verifique-os e tente novamente!\")\n                showSnack(true);\n                break;\n              case 409:\n                setSuccess(false);\n                setMessage(\"O usuário ou e-mail já existem! Por favor, escolha outro!\");\n                showSnack(true);\n                break;\n              case 500:\n                setSuccess(false);\n                setMessage(\"Erro inesperado do servidor - 500\");\n                showSnack(true);\n                break;\n              default:\n                setSuccess(false);\n                setMessage(\"Erro inesperado: \" + res.status);\n                showSnack(true);\n            }\n          },\n          (error) => {\n            setSuccess(false);\n            setMessage(error.message);\n          }                             \n        );\n    };\n     \n  return(\n      <Container component=\"main\" maxWidth=\"xs\">\n          <div className={classes.paper}>\n              <Avatar \n                className={classes.logo}\n                src={logo}\n              />\n              <Typography variant=\"h4\">\n                  Cadastrar novo usuário\n              </Typography>\n              <Formik\n                initialValues={{\n                  name: name,\n                  email: email,\n                }}\n                validationSchema={Yup.object({\n                  name: Yup.string()\n                    .max(60, \"Deve ter 60 caracteres ou menos\")\n                    .matches(/^([^0-9{}\\\\/()\\]\\[]*)$/, \"Nome inválido\")\n                    .required(\"Obrigatório\"),\n                  username: Yup.string()\n                    .min(6, \"Mínimo de 6 letras\")\n                    .max(30, \"Máximo de 30 letras\")\n                    .required(\"Obrigatório\"),\n                  email: Yup.string()\n                    .email(\"E-mail inválido\")\n                    .required(\"Obrigatório\"),\n                })}\n                onSubmit={async (values, { setSubmitting } ) => {\n                  await sendSignup(values);\n                  setSubmitting(false);       \n                }}   \n              >\n                {({ submitForm, isSubmitting}) => (\n                  <Form className={classes.form}>\n                    <Field\n                      autoFocus\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"name\"\n                      type=\"text\"\n                      label=\"Nome e Sobrenome\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"email\"\n                      type=\"email\"\n                      label=\"Endereço de e-mail\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"username\"\n                      type=\"text\"\n                      label=\"Nome de Usuário\"\n                    />\n                  { isSubmitting && <LinearProgress />}\n                    <Button\n                      className={classes.submit}\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      type=\"submit\"\n                    >\n                      Cadastrar\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\" onClick={redirectLogin}>\n                    Voltar para Login\n                  </Link>\n                </Grid>\n              </Grid>\n              <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n                      {signupSuccess\n                          ? <Alert severity=\"success\">{message}</Alert>\n                          : <Alert severity=\"error\" >{message}</Alert>\n                      }\n              </Snackbar>\n          </div>            \n      </Container>\n  );\n}\n\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Alert from '../components/Alert';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Avatar, Button, Grid, LinearProgress, makeStyles, Snackbar, Typography } from '@material-ui/core';\nimport { TextField as MuiTextField } from 'formik-material-ui';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from \"yup\";\nimport logo from 'logo.svg';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),        \n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logo: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n    margin: theme.spacing(1)\n  }\n}));\n\n\nexport default function Signup() {    \n    const classes = useStyles();\n    const history = useHistory();\n    \n    // Dialog state\n    const[message, setMessage] = useState(\"Erro crítico!\");\n    const[signupSuccess, setSuccess] = useState(false);\n    const[snack, showSnack] = useState(false);\n\n    const redirectLogin = () => {\n      history.push(\"/login\");\n    }\n    \n    const sendSignup =  async (values) => {\n        const url = \"/api/user/signup\";\n        const options = {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json' \n            },    \n            body: JSON.stringify({\n                name: values.name,\n                email: values.email,                \n                username: values.username,\n                password: values.password,\n                confirmPassword: values.confirmPassword\n            })\n        };\n        \n        await fetch(url, options)\n        .then(\n          (res) => {\n            switch (res.status) {\n              case 201:\n                setSuccess(true);\n                setMessage(\"Usuário criado com sucesso! Redirecionando para login...\")\n                showSnack(true);\n                setTimeout(() => { history.push('/login'); }, 2000);\n                break;\n              case 400:\n                setSuccess(false);\n                setMessage(\"Dados da solicitação estão incorretos! Por favor, verifique-os e tente novamente!\")\n                showSnack(true);\n                break;\n              case 409:\n                setSuccess(false);\n                setMessage(\"O usuário ou e-mail já existem! Por favor, escolha outro!\");\n                showSnack(true);\n                break;\n              case 500:\n                setSuccess(false);\n                setMessage(\"Erro inesperado do servidor! - 500\");\n                showSnack(true);\n                break;\n              default:\n                setSuccess(false);\n                setMessage(\"Erro inesperado: \" + res.status);\n                showSnack(true);\n            }\n          },\n          (error) => {\n            setSuccess(false);\n            setMessage(error.message);\n          }                             \n        );\n    };\n     \n  return(\n      <Container component=\"main\" maxWidth=\"xs\">\n          <div className={classes.paper}>\n              <Avatar \n                className={classes.logo}\n                src={logo}\n              />\n              <Typography variant=\"h4\">\n                  Cadastrar novo usuário\n              </Typography>\n              <Formik\n                initialValues={{}}\n                validationSchema={Yup.object({\n                  name: Yup.string()\n                    .max(60, \"Deve ter 60 caracteres ou menos\")\n                    .matches(/^([^0-9{}\\\\/()\\]\\[]*)$/, \"Nome inválido\")\n                    .required(\"Obrigatório\"),\n                  username: Yup.string()\n                    .min(6, \"Mínimo de 6 letras\")\n                    .max(30, \"Máximo de 30 letras\")\n                    .required(\"Obrigatório\"),\n                  email: Yup.string()\n                    .email(\"E-mail inválido\")\n                    .required(\"Obrigatório\"),\n                  password: Yup.string()\n                    .min(8, \"Mínimo de 8 caracteres\")\n                    .max(64, \"Máximo de 64 caracteres\")\n                    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[*.!@$%#^&(){}\\[\\]:;<>,.?~+-/|/=/\\\\]).*$/, \"Senha deve ter maiúsculas, minúsculas, números e caracteres especiais\")\n                    .required(\"Obrigatório\"),\n                  confirmPassword: Yup.string()\n                    .oneOf([Yup.ref('password'), null], 'Senha e confirmação não são iguais')\n                    .required(\"Obrigatório\")\n                })}\n                onSubmit={async (values, { setSubmitting } ) => {\n                  await sendSignup(values);\n                  setSubmitting(false);       \n                }}   \n              >\n                {({ submitForm, isSubmitting}) => (\n                  <Form className={classes.form}>\n                    <Field\n                      autoFocus\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"name\"\n                      type=\"text\"\n                      label=\"Nome e Sobrenome\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"email\"\n                      type=\"email\"\n                      label=\"Endereço de e-mail\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"username\"\n                      type=\"text\"\n                      label=\"Nome de Usuário\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Senha\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"confirmPassword\"\n                      type=\"password\"\n                      label=\"Confirme sua senha\"\n                    />\n                  { isSubmitting && <LinearProgress />}\n                    <Button\n                      className={classes.submit}\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      type=\"submit\"\n                    >\n                      Cadastrar\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\" onClick={redirectLogin}>\n                    Voltar para Login\n                  </Link>\n                </Grid>\n              </Grid>\n              <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n                      {signupSuccess\n                          ? <Alert severity=\"success\">{message}</Alert>\n                          : <Alert severity=\"error\" >{message}</Alert>\n                      }\n              </Snackbar>\n          </div>            \n      </Container>\n  );\n}\n\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Alert from '../components/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Snackbar,  Button, Grid, FormControl, InputLabel, Select, MenuItem, FormHelperText, TextField, FormControlLabel, Checkbox, Box, Switch} from '@material-ui/core';\nimport { ArrowBack, Save } from '@material-ui/icons';\n\nimport { Link, Route } from 'react-router-dom';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport addDays from 'date-fns/addDays';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\n\n// Styling\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n        display:'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },    \n    header: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    form: {\n        marginTop: theme.spacing(1),\n    },\n    formItems: {\n        padding: theme.spacing(1),\n    },  \n  }));\n\nexport default function Shift(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    \n    // Snack state\n    const [snack, showSnack] = useState(false);\n    const successMsg = \"Escala(s) salva!\";\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [shiftSuccess, setSuccess] = useState(false);\n    \n    // Shift state\n    const [unavailableDate, setUnavailableDate] = useState(new Date());\n    const [boardingDate, setBoardingDate] = useState(new Date());\n    const [leavingDate, setLeavingDate] = useState(new Date());\n    const [availableDate, setAvailableDate] = useState(new Date());\n    const [cycleDays, setCycleDays] = useState(0);\n    const [useCycle, setUseCycle] = useState(false);\n    const [repeat, setRepeat] = useState(0);\n  \n    // Handlers\n    const handleUseCycle = (event) => {\n        let checked = event.target.checked;\n        setUseCycle(checked);\n    }\n\n    const handleLeavingDate = (date) => {\n        setLeavingDate(date);\n        if (!useCycle) {\n            setCycleDays(differenceInCalendarDays(date, boardingDate));\n        }\n    }\n\n    const handleRepeat = (event) => {\n        setRepeat(event.target.value);\n    }\n\n    const handleCycleDays = (event) =>  {\n        let days = event.target.value;\n        if (days < 0) days = 0;\n\n        setCycleDays(days);\n\n        // Adds the cycle days to both leaving date and available date\n        let newDate = calculateCycle(days);\n        setLeavingDate(newDate);\n        setAvailableDate(newDate);        \n    }\n\n    const calculateCycle = (cycleValue) => {\n        const result = addDays(boardingDate, cycleValue);       \n        return result;\n    }\n\n    const submit = (event) => {\n        event.preventDefault();\n        validate();\n\n        fetch(\"/api/shift/add\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': sessionStorage.getItem(\"token\")\n            },\n            body: JSON.stringify({\n                \"unavailabilityStartDate\": unavailableDate,\n                \"boardingDate\": boardingDate,\n                \"leavingDate\": leavingDate,\n                \"unavailabilityEndDate\": availableDate,\n                \"cycleDays\": cycleDays,\n                \"repeat\": repeat\n            })\n        })\n            .then(res => {\n                if (res.ok) {\n                    setSuccess(true);\n                    showSnack(true);\n                    setTimeout(() => { history.push('/home'); }, 2000);\n                } else if (res.status === 403) {\n                    history.push('/login');                    \n                    throw new Error('Usuário não logado!');\n                } else {\n                    throw res;\n                }\n            })\n            .catch(err => {\n                setErrorMsg(err.message);\n                showSnack(true);\n            });\n    };\n\n    const validate = () => {\n        // TODO - validation\n    }\n\n    const closeSnack = () => {\n        showSnack(false);\n        if (shiftSuccess) {\n            history.goBack();\n        }\n    }\n\n    return (\n        <Container component=\"main\">\n            <div>\n                <AppBar\n                    className={classes.appBar}\n                    position=\"absolute\" \n                >\n                    <Toolbar>\n                        <IconButton\n                            className={classes.menuButton}\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"go back\"\n                            onClick={history.goBack}                           \n                        >\n                            <ArrowBack />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title} >\n                            Escala    \n                        </Typography>\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<Save />}\n                            onClick={submit}\n                        >\n                            Salvar\n                        </Button>                    \n                    </Toolbar>\n                </AppBar>\n            </div>\n            <div className={classes.header} />\n            <Grid container \n                direction='column'\n                justify='center'\n                className={classes.form}                \n            >\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                        className={classes.formItems}\n                        margin=\"normal\"\n                        id=\"date-unavailable\"\n                        label=\"Indisponível a partir de\"\n                        format=\"dd/MM/yyyy\"\n                        value={unavailableDate}\n                        onChange={setUnavailableDate}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                    <KeyboardDatePicker\n                        className={classes.formItems}\n                        margin=\"normal\"\n                        id=\"date-boarding\"\n                        label=\"Data de embarque\"\n                        format=\"dd/MM/yyyy\"\n                        value={boardingDate}\n                        onChange={setBoardingDate}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                    <KeyboardDatePicker\n                        className={classes.formItems}\n                        disabled={useCycle}\n                        margin=\"normal\"\n                        id=\"date-leaving\"\n                        label=\"Data de desembarque\"\n                        format=\"dd/MM/yyyy\"\n                        value={leavingDate}\n                        onChange={handleLeavingDate}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                    <KeyboardDatePicker\n                        className={classes.formItems}\n                        disabled={useCycle}\n                        margin=\"normal\"\n                        id=\"date-available\"\n                        label=\"Disponivel a partir de:\"\n                        format=\"dd/MM/yyyy\"\n                        value={availableDate}\n                        onChange={setAvailableDate}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />                          \n                </MuiPickersUtilsProvider>\n                <Grid container direction=\"row\" className={classes.formItems}>\n                    <FormControlLabel       \n                        control={\n                        <Switch\n                            checked={useCycle} \n                            onChange={handleUseCycle}\n                            name=\"checked cycle\"\n                            color=\"primary\"\n                        />\n                        }\n                        \n                    />                    \n                    <TextField\n                        disabled={!useCycle}          \n                        id=\"cycle-days\"\n                        label=\"Nº de dias embarcado\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        value={cycleDays}\n                        onChange={handleCycleDays}\n                    />\n                </Grid>\n                <FormControl className={classes.formItems}>\n                    <InputLabel id=\"repeat-cycle-label\"\n                    className={classes.formItems}>Repetir</InputLabel>\n                    <Select\n                        labelId=\"repeat-cycle-label\"\n                        id=\"repeat-cycle-select\"\n                        value={repeat}\n                        onChange={handleRepeat}\n                    >\n                        <MenuItem value={0}>Não</MenuItem>\n                        <MenuItem value={1}>1x</MenuItem>\n                        <MenuItem value={2}>2x</MenuItem>\n                        <MenuItem value={3}>3x</MenuItem>\n                        <MenuItem value={4}>4x</MenuItem>\n                        <MenuItem value={5}>5x</MenuItem>\n                        <MenuItem value={6}>6x</MenuItem>\n                        <MenuItem value={7}>7x</MenuItem>\n                        <MenuItem value={8}>8x</MenuItem>\n                        <MenuItem value={9}>9x</MenuItem>\n                        <MenuItem value={10}>10x</MenuItem>\n                        <MenuItem value={11}>11x</MenuItem>\n                        <MenuItem value={12}>12x</MenuItem>\n                    </Select>\n                    <FormHelperText>Selecione por quantas vezes repetir a escala</FormHelperText>\n                </FormControl>\n            </Grid>\n            <Snackbar open={snack} autoHideDuration={3000} onClose={closeSnack} >\n                        {shiftSuccess\n                            ? <Alert severity=\"success\">{successMsg}</Alert>\n                            : <Alert severity=\"error\" >{errorMsg}</Alert>\n                        }\n            </Snackbar>\n        </Container>\n    );\n}","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Link, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    maxWidth: 500,\n    alignContent: 'center'\n  },\n  header: {\n    marginBottom: theme.spacing(3),\n  },\n  submit: {\n    marginTop: theme.spacing(1)\n  },\n  footer: {\n    marginTop: theme.spacing(2)\n  }\n\n}))\n\nexport default function Recovery() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [input, setInput] = useState(\"\");\n\n  // Dialog state\n  const [open, setOpen] = useState(false);\n  \n  const successMsg = \"Um e-mail com instruções para troca de senha foi enviado para o e-mail de recuperação de sua conta.\" +\n   \" Por favor, cheque sua caixa de e-mail e siga o link fornecido para continuar o procedimento.\";\n  \n  const errorMsg = \"Não foi possível enviar a recuperação! Por favor, recarregue a página e tente novamente\";\n  \n  const [dialog, setDialog] = useState({\n    title: \"Ops...\",\n    message: errorMsg\n  })\n\n  // Handlers\n  const redirectLogin = () => {\n    history.push('/login');\n  }\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  }\n\n  const submit = async () => {\n    await fetch(\"/api/user/recover?user=\" + input, {\n      method: 'POST'\n    })\n    .then(\n      (res) => {\n        if (res.ok) {\n          setDialog({\n            title: \"Recuperação em andamento!\",\n            message: successMsg\n          })\n        }\n      }, \n      (error) => {\n      }\n    )\n\n    setOpen(true);\n  }\n\n  const closeDialog = () => {\n    setOpen(false);\n  }\n\n  return (\n    <Container className={classes.paper}>\n      <Grid container direction=\"column\">\n        <Grid item xs className={classes.header}>\n          <Typography  variant=\"h5\">\n            Recuperação de conta\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography>\n            Digite seu nome de usuário para recuperação de conta:\n          </Typography>\n          <TextField \n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"forgot-input\"\n            label=\"Nome de usuário para recuperação\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={input}\n            onChange={handleChange}\n          />\n          <Button className={classes.submit} variant=\"contained\" color=\"primary\" onClick={submit} fullWidth>\n            Enviar \n          </Button>\n        </Grid>\n        <Grid item xs className={classes.footer}>\n          <Link href=\"#\" variant=\"body2\" onClick={redirectLogin}>\n            Retornar para Login\n          </Link>\n        </Grid>\n        <Dialog open={open} fullWidth>\n          <DialogTitle>{dialog.title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {dialog.message}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDialog}>OK</Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    </Container>\n\n  )\n}","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from \"yup\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(6),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  header: {\n    marginBottom: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  footer: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\n\nexport default function PasswordReset() {\n  const classes = useStyles();  \n  const location = useLocation();\n  const history = useHistory();\n\n  // Reads reset token from path\n  const token = new URLSearchParams(location.search).get(\"reset\");\n  \n  // Form state\n  const [formState, setState] = useState({\n    username: \"\",\n    password: \"\",\n    confirm: \"\",\n  });\n\n  const [success, setSuccess] = useState(false);\n\n  // Dialog state\n  const [open, setOpen] = useState(false);\n  const [dialog, setDialog] = useState({\n    title: \"Ops...\",\n    message: \"Um erro aconteceu! Contate-nos para mais informações!\"\n  })\n\n  const send = async () => {\n    \n    await fetch(\"/api/user/resetPassword\", {\n      method: 'POST',\n      headers: {\n        \"reset\": token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: formState.username,\n        password: formState.password,\n        confirmPassword: formState.confirm\n      })\n    })\n    .then(\n      (res) => {\n        switch (res.status) {\n          case 200:\n            setDialog({\n              title: \"Sucesso!\",\n              message: \"Sua senha foi redefinida. Por favor, efetue o login normalmente!\"\n            })\n            setOpen(true);\n            setSuccess(true);\n            break;\n          case 403:\n            history.push(\"/login\");\n            break;\n          case 400:\n            setOpen(true);\n            break;\n          default:\n            setDialog({\n              ...dialog,\n              message: \"Algo deu errado em sua solicitação! Por favor, atualize a página e tente novamente!\"\n            })\n            setOpen(true);\n            break;\n        }\n      }, \n      (error) => {\n        setDialog({\n          ...dialog,\n          message: \"Algo deu errado em nosso servidor! Por favor, atualize a página e tente novamente!\"\n        })\n        setOpen(true);\n      }\n    );\n    \n  }\n\n  const closeDialog = () => {\n    if (success) {\n      history.push(\"/login\");\n    }\n    setOpen(false);\n  }\n\n  // Redirects to login page if no token is provided\n  if (token === null) {\n    history.push(\"/login\");\n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Typography variant=\"h4\">Recuperação de senha</Typography>\n        <Formik\n          initialValues={{}}\n          validationSchema={Yup.object({\n            username: Yup.string()\n              .required(\"Obrigatório\"),\n            password: Yup.string()\n              .min(8, \"Mínimo de 8 caracteres\")\n              .max(64, \"Máximo de 64 caracteres\")\n              .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[*.!@$%#^&(){}\\[\\]:;<>,.?~+-/|/=/\\\\]).*$/, \"Senha deve ter maiúsculas, minúsculas, números e caracteres especiais\")\n              .required(\"Obrigatório\"),\n            confirm: Yup.string()\n              .oneOf([Yup.ref('password'), null], 'Senha e confirmação não são iguais')\n              .required(\"Obrigatório\")\n          })}\n          onSubmit={async (values, { setSubmitting } ) => {\n            setState(values);\n            await send();\n            setSubmitting(false);\n          }}\n        >\n          {({ submitForm, isSubmitting }) => (\n            <Form className={classes.form}>\n              <Field\n                fullWidth\n                required\n                margin=\"normal\"\n                variant=\"outlined\"\n                component={TextField}\n                name=\"username\"\n                type=\"text\"\n                label=\"Nome de Usuário\"\n              />\n              <Field\n                fullWidth\n                required\n                margin=\"normal\"\n                variant=\"outlined\"\n                component={TextField}\n                name=\"password\"\n                type=\"password\"\n                label=\"Senha\"\n              />\n              <Field\n                fullWidth\n                required\n                margin=\"normal\"\n                variant=\"outlined\"\n                component={TextField}\n                name=\"confirm\"\n                type=\"password\"\n                label=\"Confirme sua senha\"\n              />\n              { isSubmitting && <LinearProgress />}\n              <Button\n                className={classes.submit}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n              >\n                Enviar\n              </Button>\n            </Form>\n          )}\n        </Formik>\n        <Dialog open={open} fullWidth>\n          <DialogTitle>\n            {dialog.title}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {dialog.message}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDialog}>OK</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </Container>\n    )\n}","import { useHistory, useLocation } from \"react-router\";\n\n// Used to load authentication details from URL into session\nexport default function LoginSuccess() {\n    const location = useLocation();\n    const history = useHistory();\n\n    const params = new URLSearchParams(location.search);\n    const token = params.get('token');\n    const username = params.get('user');\n    sessionStorage.setItem(\"token\", 'Bearer ' + token);\n    sessionStorage.setItem(\"loggedUsername\", username);\n\n    history.push(\"/\");\n    return null;\n}","import React from 'react';\nimport Home from './Home.js';\nimport Login from './auth/Login.js';\nimport SocialSignup from './auth/SocialSignup.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Signup from './auth/Signup.js';\nimport Shift from './shifts/Shift.js';\nimport Recovery from './auth/Recovery.js';\nimport PasswordReset from './auth/PasswordReset.js';\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport LoginSuccess from 'auth/LoginSuccess.js';\n\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      black:\"#000\",\n      white:\"#fff\"\n    },\n    background: {\n      paper: \"rgba(235, 246, 249, 1)\",\n      default: \"#fafafa\"\n    },\n    primary: {\n      light: \"#7986cb\",\n      main: \"rgba(2, 27, 154, 1)\",\n      dark:\"#303f9f\",\n      contrastText:\"#fff\"\n    },\n    secondary: {\n      light: \"#ff4081\",\n      main: \"rgba(182, 128, 2, 1)\",\n      dark: \"#c51162\",\n      contrastText: \"#fff\"\n    },\n    error: {\n      light: \"#e57373\",\n      main:\"#f44336\",\n      dark: \"#d32f2f\",\n      contrastText:\"#fff\"\n    },\n    text: {\n      primary: \"rgba(0, 0, 0, 0.87)\",\n      secondary: \"rgba(0, 0, 0, 0.54)\",\n      disabled: \"rgba(0, 0, 0, 0.38)\",\n      hint:\"rgba(0, 0, 0, 0.38)\"\n    }\n  },\n  typography: {\n    button: {\n      fontSize: \"1rem\",\n      fontWeight: \"500\",\n      letterSpacing: \"0.02857em\"\n    }\n  }\n})\n\n\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = sessionStorage.getItem('token');\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\nexport default function App() {\n\n  // Main routing for the application\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router>\n          <Switch>\n            <PrivateRoute exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </PrivateRoute> \n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <PrivateRoute path=\"/home\">\n              <Home />\n            </PrivateRoute>        \n            <PrivateRoute exact path=\"/shift\">\n              <Shift />\n            </PrivateRoute>\n            <Route exact path=\"/recovery\">\n              <Recovery />\n            </Route>\n            <Route exact path=\"/changePassword\"><PasswordReset /></Route>\n            <Route exact path=\"/loginSuccess\"><LoginSuccess/></Route>\n            <Route exact path=\"/socialSignup\"><SocialSignup/></Route>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}