{"version":3,"sources":["calendar/EventDialog.js","calendar/Calendar.js","components/Alert.js","shifts/Shifts.js","friends/RequestDialog.js","friends/Friends.js","Home.js","logo.svg","auth/Login.js","auth/Signup.js","shifts/Shift.js","auth/Recovery.js","auth/PasswordReset.js","App.js","index.js"],"names":["EventDialog","props","open","onClose","date","parsedDate","Date","history","useHistory","useState","friends","setFriends","loaded","setLoaded","useEffect","fetch","toISOString","substr","method","headers","sessionStorage","getItem","then","res","ok","json","status","push","Error","result","undefined","_embedded","appUserList","error","Dialog","maxWidth","fullWidth","DialogTitle","toLocaleDateString","DialogContent","dividers","Grid","container","direction","spacing","item","Typography","variant","length","List","disablePadding","map","friend","ListItem","dense","ListItemText","primary","userInfo","name","Divider","xs","justify","alignItems","DialogActions","Button","color","onClick","Calendar","setOpen","clickedDate","setClickedDate","changeTitle","plugins","dayGridPlugin","interactionPlugin","initialView","selectable","height","contentHeight","locale","events","shifts","shift","id","shiftId","title","start","unavailabilityStartDate","end","boardingDate","display","backgroundColor","allDay","extendedProps","group","leavingDate","unavailabilityEndDate","flat","parseEvents","dateClick","info","dateStr","Fab","aria-label","component","Link","to","Add","Alert","elevation","Shifts","React","checked","setChecked","snack","showSnack","shiftSuccess","setSuccess","successMsg","setSuccessMsg","errorMsg","setErrorMsg","handleToggle","currentIndex","indexOf","newChecked","splice","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","ListItemAvatar","disabled","Edit","event","preventDefault","forEach","setTimeout","catch","err","message","fetchShifts","Delete","Snackbar","autoHideDuration","severity","RequestDialog","username","setUsername","DialogContentText","TextField","autoFocus","margin","label","type","value","onChange","target","useStyles","makeStyles","theme","root","width","Friends","classes","loggedUsername","requestDialog","deleteDialog","requests","setRequests","loadedFriends","setLoadedFriends","loadedRequests","setLoadedRequests","friendSuccess","newFriends","newRequests","friendRequestDTOList","toggleDialog","dialog","isAvailableNow","now","every","startDate","endDate","isBefore","isAfter","className","request","sourceUsername","inset","targetUsername","secondary","timestamp","toLocaleString","Chip","IconButton","RemoveCircleOutline","drawerWidth","menuButton","marginRight","hide","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","drawer","flexShrink","drawerHeader","padding","mixins","toolbar","justifyContent","drawerPaper","content","contentShift","Home","setTitle","match","useRouteMatch","anchorEl","setAnchorEl","isLoaded","setIsLoaded","setShifts","newTitle","newShifts","shiftList","toggleDrawer","key","handleMenuClose","AppBar","position","clsx","Toolbar","Badge","badgeContent","currentTarget","AccountCircle","keepMounted","Boolean","MenuItem","removeItem","Drawer","anchor","paper","onKeyDown","ChevronLeft","url","CalendarToday","DateRange","Event","People","path","exact","marginTop","flexDirection","form","submit","logo","Login","password","state","setState","isSubmitting","setSubmitting","loginSuccess","sendLogin","a","options","mode","body","JSON","stringify","setItem","get","handleChange","Container","Avatar","src","onSubmit","noValidate","required","autoComplete","LinearProgress","href","Signup","confirmPassword","email","values","setValues","setMessage","signupSuccess","sendSignup","initialValues","validationSchema","Yup","max","matches","min","oneOf","submitForm","MuiTextField","header","formItems","Shift","unavailableDate","setUnavailableDate","setBoardingDate","setLeavingDate","availableDate","setAvailableDate","cycleDays","setCycleDays","useCycle","setUseCycle","repeat","setRepeat","calculateCycle","cycleValue","addDays","validate","goBack","ArrowBack","startIcon","Save","utils","DateFnsUtils","format","KeyboardButtonProps","differenceInCalendarDays","FormControlLabel","control","Switch","InputLabelProps","shrink","days","newDate","FormControl","InputLabel","Select","labelId","FormHelperText","alignContent","marginBottom","footer","Recovery","input","setInput","setDialog","PasswordReset","location","useLocation","token","URLSearchParams","search","confirm","formState","success","send","createMuiTheme","palette","common","black","white","background","default","light","main","dark","contrastText","text","hint","typography","fontSize","fontWeight","letterSpacing","PrivateRoute","children","rest","auth","render","pathname","from","App","Fragment","ThemeProvider","CssBaseline","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35253064.chunk.js","sourcesContent":["import { React, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nEventDialog.propTypes = {\n  date: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function EventDialog(props) {\n  const { open, onClose, date } = props;\n  const parsedDate = new Date(date);\n  const history = useHistory();\n\n  const [friends, setFriends] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n\n  const fetchAvailableFriends = () => {\n    fetch(\"/api/calendar/available?date=\" + parsedDate.toISOString().substr(0, 10), {\n      method: 'GET',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      } else if (res.status === 403) {\n        history.push(\"/login\");\n        return new Error(\"User not logged\");        \n      } else {\n        setFriends([]);\n        return new Error(\"Error fetching friends: \" + res.status);\n      }      \n    })\n    .then(\n      (result) => {\n        if (result._embedded === undefined) {\n          setFriends([]);\n        } else {\n          setFriends(result._embedded.appUserList);\n        }\n      },\n      (error) => {\n        setFriends([]);\n      }\n    )\n  }\n\n  useEffect(() => {\n    fetchAvailableFriends();\n    return () => setLoaded(true);\n  }, [loaded]);\n\n  return (\n    <Dialog open={open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>\n        {`Dia ${parsedDate.toLocaleDateString()}`}\n      </DialogTitle>\n      <DialogContent dividers>\n        <Grid container  direction=\"column\" spacing={3}>\n          <Grid item>\n            <Typography variant=\"subtitle1\">Amigos em terra</Typography>\n            </Grid>\n          <Grid item>\n            {friends.length === 0\n              ? <Typography variant=\"h6\">Nenhum amigo disponível</Typography>\n              : \n                <List disablePadding>\n                  {friends.map(friend => (\n                    <ListItem dense key={friend}>\n                      <ListItemText primary={friend.userInfo.name} />\n                    </ListItem>\n                  ))}\n                </List>\n            }\n          </Grid>\n          <Grid item><Divider /></Grid>          \n          <Grid item>\n            <Typography variant=\"subtitle1\">Eventos</Typography>\n          </Grid>\n          <Grid item container xs justify=\"center\" alignItems=\"center\">\n            <Typography variant=\"body1\">-</Typography>          \n          </Grid>  \n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onClose}>Fechar</Button>\n      </DialogActions>\n    </Dialog>  \n  );\n}","import { React, useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport { Fab, Grid } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport EventDialog from './EventDialog';\n\nexport default function Calendar(props) {\n    const [open, setOpen] = useState(false);\n    const [clickedDate, setClickedDate] = useState(new Date().toISOString());\n\n    const closeDialog = () => {\n        setOpen(false);\n    }\n\n    // Handlers\n    const handleDayClick = (info) => {\n        setClickedDate(info.dateStr);\n        setOpen(true);\n    }\n\n    // Changes parent title\n    useEffect(() => {\n        props.changeTitle(\"Calendário\");\n    }, [])\n\n    // Parses Shift objects to FullCalendars's Event objects\n    // Shifts are assumed to always be a Shift array/list\n    const parseEvents = (props) => {\n        var events = props.shifts.map(shift => {            \n            var unavailable = {\n                id: shift.shiftId,\n                title: \"Pré-embarque\",\n                start: shift.unavailabilityStartDate,\n                end: shift.boardingDate,\n                display: \"block\",\n                backgroundColor: \"rgb(255,92,0)\",\n                allDay: \"true\",\n                extendedProps: {\n                    group: shift.shiftId\n                }\n            };\n\n            var onBoard = {\n                id: \"board\" + shift.shiftId,\n                title: \"A bordo\",\n                start: shift.boardingDate,\n                end: shift.leavingDate,\n                display: \"block\",\n                backgroundColor: \"rgb(170,0,0)\",\n                allDay: \"true\",\n                extendedProps: {\n                    group: shift.shiftId\n                }\n            };\n\n            var available = {\n                id: \"available\" + shift.shiftId,\n                title: \"Pós-embarque\",\n                start: shift.leavingDate,\n                end: shift.unavailabilityEndDate,\n                display: \"block\",\n                backgroundColor: \"rgb(0,185,185)\",\n                allDay: \"true\",\n                extendedProps: {\n                    group: shift.shiftId\n                }             \n            }\n\n            return [unavailable, onBoard, available];\n        });\n        \n        return events.flat();\n    }\n\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item>\n                <FullCalendar\n                    plugins={[ dayGridPlugin, interactionPlugin ]}\n                    initialView=\"dayGridMonth\"\n                    selectable={true}\n                    height=\"auto\"\n                    contentHeight=\"auto\"\n                    locale=\"pt-br\"\n                    events={parseEvents(props)}\n                    dateClick={handleDayClick}\n                />\n            </Grid>\n            <Grid container item justify=\"flex-end\">\n                <Fab \n                    variant=\"extended\"\n                    color=\"primary\" \n                    aria-label=\"add\"\n                    component={Link}\n                    to=\"/shift\"\n                >\n                    <Add />\n                    Escala\n                </Fab>\n            </Grid>\n            <EventDialog open={open} onClose={closeDialog} date={clickedDate} />\n        </Grid>\n    );\n}","import React from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport default function Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Alert from 'components/Alert.js';\nimport { Snackbar, Checkbox, Fab, Grid, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport { Add, Delete, Edit } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\nexport default function Shifts(props) {\n    const history = useHistory();\n    \n    // Shift selection state (through checkbox)\n    const [checked, setChecked] = React.useState([0]);\n    \n    // Snack state\n    const [snack, showSnack] = useState(false);\n    const [shiftSuccess, setSuccess] = useState(false);\n    const [successMsg, setSuccessMsg] = useState(\"Sucesso!\");\n    const [errorMsg, setErrorMsg] = useState(\"\");\n\n    // Changes parent title\n    useEffect(() => {\n        props.changeTitle(\"Escalas\");\n    }, [])\n    \n    // Shift deletion state\n    const successDeleteMsg = \"Escala(s) deletada(s)!\";\n    \n    const deleteShift = (event) => {\n        event.preventDefault();\n        //validate();\n\n        if (checked.length === 1) {\n            setSuccess(false);\n            setErrorMsg(\"Nenhuma escala selecionada!\");\n            showSnack(true);\n            return;\n        }\n\n        checked.forEach(id => {          \n            if (id === 0) return;             \n            fetch(\"/api/shift/remove?id=\" + id, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    'Authorization': sessionStorage.getItem(\"token\")\n                }\n            })\n            .then(res => {\n                switch (res.status) {\n                    case 204:\n                      setSuccess(true);\n                      setSuccessMsg(successDeleteMsg);\n                      showSnack(true);\n                      setTimeout(() => { history.push('/home/shifts'); }, 2000);\n                      break;\n                    case 403:\n                      history.push('/login');                    \n                      throw new Error('Usuário não logado!');\n                    case 404:\n                      throw new Error('Escala não encontrada no servidor!');\n                    default:\n                      throw new Error('Unexpected server response: ' + res.status);\n                }\n            })\n            .catch(err => {\n                setSuccess(false);\n                setErrorMsg(err.message);\n                showSnack(true);\n            });\n        });\n\n        // Forces reloading of shifts after modification\n        props.fetchShifts();\n    };\n\n\n    // Handles the toggling of list items\n    const handleToggle = (shift) => () => {\n        const currentIndex = checked.indexOf(shift.shiftId);\n        const newChecked = [...checked];\n\n        \n        if (currentIndex === -1) {\n            newChecked.push(shift.shiftId);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        \n        setChecked(newChecked);\n    };\n\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"stretch\">\n            <Grid container justify=\"center\">\n                <List>\n                    {props.shifts === null ? [] : props.shifts.map(shift => (\n                        <ListItem key={shift} button onClick={handleToggle(shift)}>\n                            <ListItemIcon>\n                                <Checkbox\n                                    edge=\"start\"\n                                    checked={checked.indexOf(shift.shiftId) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                />\n                            </ListItemIcon>\n                            <ListItemAvatar>\n                                <Typography variant=\"h6\">\n                                    {shift.shiftId}\n                                </Typography>\n                            </ListItemAvatar>\n                            <ListItemText \n                                primary={`de ${shift.unavailabilityStartDate} até ${shift.unavailabilityEndDate}`}\n                            />                        \n                        </ListItem>\n                    ))}\n                </List>\n            </Grid>\n            <Grid container justify=\"flex-end\">\n                <Fab \n                    color=\"primary\" \n                    aria-label=\"add\"\n                    component={Link}\n                    to=\"/shift\"\n                >\n                    <Add />\n                </Fab>\n                <Fab color=\"default\" disabled={true} aria-label=\"edit\">\n                    <Edit />\n                </Fab>\n                <Fab color=\"secondary\" aria-label=\"delete\" onClick={deleteShift}>\n                    <Delete />\n                </Fab>\n            </Grid>\n            <Grid>\n                <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n                            {shiftSuccess\n                                ? <Alert severity=\"success\">{successMsg}</Alert>\n                                : <Alert severity=\"error\" >{errorMsg}</Alert>\n                            }\n                </Snackbar>\n            </Grid>\n        </Grid>\n        );\n}","import { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from '@material-ui/core';\n\nexport default function RequestDialog(props) {\n  const { onClose, open } = props;\n  const [username, setUsername] = useState(\"\");\n  \n  const submit = (event) => {\n    onClose(username);\n  }\n\n  const cancel = () => {\n    onClose(\"\");\n  }\n\n  const handleChange = (event) => {\n    setUsername(event.target.value);\n  }\n\n  return (\n    <Grid container>\n      <Dialog open={open}>\n        <DialogTitle>Requisitar amizade</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Digite abaixo o nome de usuário que deseja adicionar como amigo.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"username\"\n            label=\"Nome de usuário\"\n            type=\"text\"\n            value={username}\n            fullWidth\n            onChange={handleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={submit}>Requisitar</Button>\n          <Button color=\"primary\" onClick={cancel}>Cancelar</Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n\nRequestDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};","import {React, useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useHistory} from 'react-router-dom';\nimport { Snackbar, Button, Dialog, DialogActions, DialogTitle, Fab, Grid, IconButton, List, ListItem, ListItemIcon, ListItemText, Divider, Chip } from '@material-ui/core';\nimport { Add, RemoveCircleOutline} from '@material-ui/icons';\nimport Alert from '../components/Alert';\nimport RequestDialog from './RequestDialog';\nimport { isAfter, isBefore } from 'date-fns';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 500,    \n  },\n}));\n\nexport default function Friends(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  // Needed for filtering the requests from the server\n  const loggedUsername = sessionStorage.getItem('loggedUsername');\n  \n  // Dialog state\n  const [open, setOpen] = useState({\n    requestDialog: false,\n    deleteDialog: false,\n  });\n  \n  // Friends state\n  const [friends, setFriends] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [loadedFriends, setLoadedFriends] = useState(false);\n  const [loadedRequests, setLoadedRequests] = useState(false);\n  \n  // Snack state\n  const [snack, showSnack] = useState(false);\n  const [friendSuccess, setSuccess] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(\"Sucesso!\");\n  const [errorMsg, setErrorMsg] = useState(\"\");  \n\n  // Changes parent title\n  useEffect(() => {\n    props.changeTitle(\"Amigos\");\n  }, [])\n  \n  // API interaction functions\n  const requestFriendship = (username) => {\n    if (username !== null && username !== \"\") {\n      fetch(\"/api/friend/request?username=\" + username, {\n        method: 'POST',\n        headers: {\n          'Authorization': sessionStorage.getItem('token')\n        }\n      })\n      .then(\n        (res) => {\n          switch (res.status) {\n            case 201:\n              setSuccessMsg('Amizade requisitada! Aguardando aprovação...');\n              setSuccess(true);\n              showSnack(true);\n              break;\n            case 403:\n              history.push('/login');\n              break;\n            case 400:\n              setErrorMsg('Não é possível ser amigo de si mesmo! Tente novamente.');\n              setSuccess(false);\n              showSnack(true);\n              break;\n            case 404:\n              setErrorMsg('Usuário não encontrado!');\n              setSuccess(false);\n              showSnack(true);\n              break;\n            default:\n              setErrorMsg('Resposta inesperada do servidor: ' + res);\n              setSuccess(false);\n              showSnack(true);\n          }\n        },\n        (error) => {\n          setErrorMsg(error.message);\n          setSuccess(false);\n          showSnack(true);\n        }\n      );\n    }\n\n    setLoadedRequests(false);\n\n    // Closes dialog\n    setOpen({ ...open, requestDialog: false});\n  }\n\n  const acceptFriend = (username) => (event) => {\n    fetch(\"/api/friend/accept?username=\" + username, {\n      method: 'POST',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(\n      (result) => {\n        switch (result.status) {\n          case 200:\n            setSuccessMsg('Amizade aceita!');\n            setSuccess(true);\n            showSnack(true);\n            break;\n          case 403:\n            history.push('/login');\n            return;\n          default:\n            setErrorMsg(\"Resposta inesperada do servidor\" + result.status);\n            setSuccess(false);\n            showSnack(true);\n        }\n      },\n      (error) => {\n        setErrorMsg(error.message);\n        setSuccess(false);\n        showSnack(true);\n      }\n    );\n\n    setLoadedFriends(false);\n    setLoadedRequests(false);\n  }\n  \n  const unfriend = (username) => (event) => {\n    fetch(\"/api/friend/remove?username=\" + username, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(\n      (res) => {\n        if (res.status === 204) {\n          setSuccess(true);\n          setSuccessMsg('Amizade desfeita com sucesso!');\n          showSnack(true);\n        } else if (res.status === 403) {\n          history.push(\"/login\");\n          return;\n        } else {\n          setErrorMsg('Resposta inesperada do servidor: ' + res.status);\n          setSuccess(false);\n          showSnack(true);\n        }\n      },\n      (error) => {\n        setErrorMsg(error.message);\n        setSuccess(false);\n        showSnack(true);\n      }\n    );\n\n    // Refetch friends\n    setLoadedFriends(false);\n\n    // Closes delete dialog\n    setOpen({ ...open, deleteDialog: false});\n  };\n\n  \n  \n  // Fetches friends from API\n  const fetchFriends = () => {\n    fetch(\"/api/friend\", {\n      method: 'GET',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(res => {\n      if (res.ok) {\n        return res;\n      } else if (res.status === 403) {\n        history.push(\"/login\");\n        return new Error(\"Forbidden\");        \n      } else {\n        return new Error('Unexpected response status: ' + res.status);\n      }\n    })\n    .then(res => res.json())\n    .then(\n      (result) => {\n        const newFriends = result._embedded;\n        if (newFriends === undefined) {\n          setFriends([]);\n        } else {\n          setFriends(newFriends.appUserList);\n        }\n      },\n      (error) => {\n        setFriends([]);\n      }\n    )\n  }\n    \n  // Fetches friend requests from API\n  const fetchRequests = () => {\n    fetch('/api/friend/request', {\n      method: 'GET',\n      headers: {\n        'Authorization': sessionStorage.getItem('token')\n      }\n    })\n    .then(res => {\n      switch (res.status) {\n        case 200:\n          return res.json();\n        case 403:\n          history.push('/login');\n          return new Error(\"User not logged\");\n        default:\n          return new Error(res);\n      }\n    })\n    .then(\n      (result) => {\n        const newRequests = result._embedded;\n        if (newRequests === undefined) {\n          setRequests([]);\n        } else {\n          setRequests(newRequests.friendRequestDTOList);\n        }\n      }, \n      (error) => {\n        setRequests([]);\n      }\n    )\n  }\n  \n  // Fetches state from API\n  useEffect(() => {\n    fetchFriends();\n    setLoadedFriends(true);\n  }, [loadedFriends])\n  \n  useEffect(() => {\n    fetchRequests();\n    setLoadedRequests(true);\n  }, [loadedRequests])\n  \n  const toggleDialog = (dialog, open) => (event) => {\n    setOpen({ ...open, [dialog]: open });\n  }\n  \n  // Returns true if today is outside the shifts, or false if it is inside\n  const isAvailableNow = (shifts) => {\n    const now = Date.now();\n    return shifts.every((shift) => {\n      const startDate = new Date(shift.unavailabilityStartDate);\n      const endDate = new Date(shift.unavailabilityEndDate);\n\n      return isBefore(now, startDate) && isAfter(now, endDate);\n    })\n  }\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"stretch\">\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <List className={classes.root}>\n          {requests.map(request => (\n            request.sourceUsername === loggedUsername\n            ?\n            <ListItem button key={request}> \n                <ListItemText inset\n                  primary={request.targetUsername}\n                  secondary={`Requisitado em ${new Date(request.timestamp).toLocaleString()}`}\n                  />                  \n                <ListItemIcon >\n                  <Button edge=\"end\" color=\"primary\">Aguardando aprovação</Button>\n                </ListItemIcon>\n              </ListItem>\n            :\n            <ListItem button key={request}> \n                <ListItemText inset\n                  primary={request.sourceUsername}\n                  secondary={`Requisitado em ${new Date(request.timestamp).toLocaleString()}`}\n                  />    \n                <ListItemIcon>\n                  <Button color=\"primary\" onClick={acceptFriend(request.sourceUsername)}>Aceitar</Button> \n                </ListItemIcon>\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List className={classes.root}>\n          {friends.map(friend => (\n            <ListItem button key={friend}>\n              <ListItemText inset             \n                primary={friend.userInfo.name}\n                secondary={friend.userInfo.username}\n              />\n              <ListItemText>\n                {isAvailableNow(friend.shifts) \n                ? <Chip color=\"primary\" label=\"Disponível\" />\n                : <Chip color=\"secondary\" label=\"Embarcado\" />\n                }\n              </ListItemText>\n              <ListItemIcon edge=\"end\">\n                <IconButton onClick={toggleDialog('deleteDialog', true)}>\n                  <RemoveCircleOutline color=\"error\" />\n                </IconButton>\n              </ListItemIcon>\n              <Dialog open={open['deleteDialog']}>\n                <DialogTitle>\n                  Deseja desfazer a amizade?\n                </DialogTitle>\n                <DialogActions>\n                  <Button autoFocus color=\"primary\" onClick={unfriend(friend)}>\n                    Aceitar\n                  </Button>\n                  <Button color=\"primary\" onClick={toggleDialog('deleteDialog', false)}>\n                    Cancelar\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </ListItem>\n          ))}\n        </List>\n      </Grid>\n      <Grid container justify=\"flex-end\">\n        <Fab color=\"primary\" aria-label=\"add\" onClick={toggleDialog('requestDialog', true)}>\n          <Add />\n        </Fab>\n      </Grid>\n      <Grid>\n          <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n            {friendSuccess\n              ? <Alert severity=\"success\">{successMsg}</Alert>\n              : <Alert severity=\"error\" >{errorMsg}</Alert>\n          }\n        </Snackbar>\n      </Grid>\n      <RequestDialog onClose={requestFriendship} open={open.requestDialog}/>\n    </Grid>\n  );\n\n \n}","import {React, useEffect, useState} from 'react';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Drawer from '@material-ui/core/Drawer';\nimport { Divider, List, ListItem, ListItemIcon, ListItemText, Menu, MenuItem } from '@material-ui/core';\nimport { AccountCircle, CalendarToday, ChevronLeft, DateRange, Event, People } from '@material-ui/icons';\n\nimport Calendar from './calendar/Calendar.js';\nimport { Link, Route, Switch, Redirect, useRouteMatch, useHistory } from 'react-router-dom';\nimport Shifts from './shifts/Shifts.js';\nimport Friends from './friends/Friends.js';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n        display:'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      //marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));\n\nexport default function Home() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [title, setTitle] = useState(\"Minha Escala\");\n\n    // Allows use of relative paths for nested contents\n    let match = useRouteMatch();\n    \n    // Drawer state\n    const [open, setOpen] = useState(false);\n\n    // Menu state\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    // Shifts state\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [shifts, setShifts] = useState([]);\n\n    // Helper functions\n    const changeTitle = (newTitle) => {\n      setTitle(newTitle);\n    }\n\n    const logout = () => {\n      // Cleans session storage\n      sessionStorage.removeItem(\"token\");\n      sessionStorage.removeItem(\"loggedUsername\");\n      \n      // Redirects to login\n      history.push(\"/login\");\n\n      handleMenuClose();\n    }\n\n    const fetchShifts = () => {\n      fetch(\"/api/shift\", {\n        method: 'GET',\n        headers: {          \n          'Authorization': sessionStorage.getItem(\"token\")\n        }\n      })\n      .then(res => {\n        if (res.status === 403) {\n          history.push(\"/login\");\n          return new Error(\"User not logged\");\n        } else if (res.ok) {\n          return res;\n        }\n      })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          const newShifts = result._embedded;\n          if (newShifts === undefined) {\n            setShifts([]);\n          } else {\n            setShifts(newShifts.shiftList)\n          }\n          setIsLoaded(true);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setShifts([]);\n        }\n      );\n    }\n\n    useEffect(() => {\n      fetchShifts();\n      setIsLoaded(true);\n    }, [isLoaded]);\n\n\n    // Drawer handler\n    const toggleDrawer = (open) => (event) => {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n      }\n      \n      setOpen(open);\n    }\n\n    // Account menu handlers\n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    }\n\n    const handleMenuClose = () => {\n      setAnchorEl(null);\n    }\n\n    return (\n        <div className='root'>\n            <AppBar \n                position=\"absolute\" \n                className={clsx(classes.appBar, open && classes.appBarShift)}\n            >\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open menu\"\n                        onClick={toggleDrawer(true)}\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                      {title}   \n                    </Typography>\n                    <IconButton color=\"inherit\" >\n                        <Badge badgeContent={0} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                    <IconButton color=\"inherit\" onClick={handleMenu}>\n                      <AccountCircle id=\"account-circle\"/>\n                    </IconButton>\n                    <Menu \n                      id=\"menu-account\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={Boolean(anchorEl)}\n                      onClose={handleMenuClose}\n                    >\n                      <MenuItem disabled>\n                        {sessionStorage.getItem(\"loggedUsername\")}\n                      </MenuItem>\n                      <Divider />\n                      <MenuItem onClick={logout}>\n                        Logout\n                      </MenuItem>                      \n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"temporary\"\n                anchor=\"left\"\n                open={open}\n                className={classes.drawer}\n                classes={{\n                    paper: classes.drawerPaper\n                }}\n                onKeyDown={toggleDrawer(false)}\n                onClick={toggleDrawer(false)}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton\n                        onClick={toggleDrawer(false)}\n                    >\n                        <ChevronLeft />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List onClick={toggleDrawer(false)}>\n                    <ListItem button key=\"calendar\"\n                      component={Link}\n                      to={`${match.url}/calendar`}\n                    >\n                        <ListItemIcon><CalendarToday /></ListItemIcon>\n                        <ListItemText primary=\"Calendário\"/>\n                    </ListItem>\n                    <ListItem button key=\"shifts\"\n                      component={Link}\n                      to={`${match.url}/shifts`}\n                    >\n                        <ListItemIcon><DateRange /></ListItemIcon>\n                        <ListItemText primary=\"Escalas\"/>\n                    </ListItem>\n                    <ListItem button key=\"events\"\n                      component={Link}\n                      to={`${match.url}/events`}\n                    >\n                        <ListItemIcon><Event /></ListItemIcon>\n                        <ListItemText primary=\"Eventos\"/>\n                    </ListItem>\n                    <ListItem button key=\"friends\"\n                      component={Link}\n                      to={`${match.url}/friends`}\n                    >\n                        <ListItemIcon><People /></ListItemIcon>\n                        <ListItemText primary=\"Amigos\"/>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <div className={classes.drawerHeader} />\n            <main className={classes.content}>\n              <Switch>\n                <Route path={`${match.path}/calendar`}>                  \n                  <Calendar shifts={shifts} changeTitle={changeTitle}/>\n                </Route>                \n                <Route path={`${match.path}/shifts`}>\n                  <Shifts shifts={shifts} fetchShifts={fetchShifts} changeTitle={changeTitle} />\n                </Route>\n                <Route path={`${match.path}/events`}>                  \n                </Route>\n                <Route path={`${match.path}/friends`}>\n                  <Friends changeTitle={changeTitle} />\n                </Route>                \n                <Route exact path={match.path}>\n                  <Redirect to={`${match.path}/calendar`} />\n                </Route>\n              </Switch>\n            </main>\n          </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo.2d757cfc.svg\";","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'components/Alert'\nimport { Avatar, Button, LinearProgress, Link, makeStyles, Snackbar, TextField, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport logo from 'logo.svg';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(6),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    logo: {\n        width: theme.spacing(14),\n        height: theme.spacing(14),\n        margin: theme.spacing(1)\n    }\n}));\n\nexport default function Login() {    \n    const classes = useStyles();\n    const history = useHistory();\n\n    const [state, setState] = useState({\n      username: \"\",\n      password: \"\"\n    })\n    const [isSubmitting, setSubmitting] = useState(false);\n\n    // Snack state\n    const successMsg = \"Login com sucesso!\";\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [loginSuccess, setSuccess] = useState(false);\n    const [snack, showSnack] = useState(false);\n\n    const redirectSignup = () => {\n        history.push('/signup');\n    }\n\n    const redirectRecovery =() => {\n        history.push('/recovery');\n    }\n\n    const sendLogin = async () => {\n        const url = \"/login\";\n        const options = {\n            method: 'POST',\n            mode: 'no-cors',              \n            body: JSON.stringify({\n                username: state.username,\n                password: state.password\n            })\n        };\n\n        fetch(url, options)\n        .then(\n            (res) => {\n              switch (res.status) {\n                case 200:\n                  sessionStorage.setItem(\"token\", res.headers.get(\"Authorization\"));\n                  sessionStorage.setItem(\"loggedUsername\", state.username);\n                  setSuccess(true);\n                  showSnack(true);\n                  setTimeout(() => {\n                    history.push(\"/home\");\n                  }, 500);\n                  break;\n                case 403:\n                  setSuccess(false);\n                  setErrorMsg(\"Usuário ou senha incorretos!\");\n                  break;\n                case 401:\n                  setSuccess(false);\n                  setErrorMsg(\"Usuário ou senha incorretos!\");\n                  break;\n                case 500:\n                  setSuccess(false);\n                  setErrorMsg(\"Algo deu errado em nosso servidor!\");\n                  break;\n                default:\n                  setSuccess(false);\n                  setErrorMsg(\"Erro inesperado do servidor: \" + res.status);\n              }\n\n              showSnack(true);\n            },\n            (error) => {\n              setErrorMsg(error);\n              showSnack(true);\n            }\n        )            \n    };\n\n    const handleChange = (event) => {\n      const name = event.target.name;\n      const value = event.target.value;\n      setState({\n        ...state,\n        [name]: value\n      });\n    }\n      \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setSubmitting(true);\n        sendLogin();\n        setSubmitting(false);\n    };\n\n    if (sessionStorage.getItem('token') !== null) {\n      history.push(\"/home\");\n    }\n    \n    return(\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Avatar\n                    className={classes.logo}\n                    src={logo}\n                />\n                <Typography variant=\"h3\">\n                    Agenda Marítima\n                </Typography>\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Nome de Usuário\"\n                        name=\"username\"\n                        autoFocus\n                        autoComplete=\"username\"\n                        value={state.username}\n                        onChange={handleChange}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Senha\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={state.password}\n                        onChange={handleChange}\n                    />\n                    { isSubmitting && <LinearProgress />}           \n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant='contained'\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        className={classes.submit}                 \n                    >\n                        Entrar\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\" onClick={redirectRecovery}>\n                                Esqueceu sua senha?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\" onClick={redirectSignup}>\n                                {\"Não tem uma conta? Cadastre-se!\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n                        {loginSuccess\n                            ? <Alert severity=\"success\">{successMsg}</Alert>\n                            : <Alert severity=\"error\" >{errorMsg}</Alert>\n                        }                       \n                </Snackbar>                \n            </div>            \n        </Container>\n    );\n}\n\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Alert from '../components/Alert';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Avatar, Button, Grid, LinearProgress, makeStyles, Snackbar, Typography } from '@material-ui/core';\nimport { TextField as MuiTextField } from 'formik-material-ui';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from \"yup\";\nimport logo from 'logo.svg';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(6),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),        \n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  logo: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n    margin: theme.spacing(1)\n  }\n}));\n\n\nexport default function Signup() {    \n    const classes = useStyles();\n    const history = useHistory();\n\n    const [values, setValues] = useState({\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        name: \"\",\n        email: \"\"        \n    })\n    \n    // Dialog state\n    const[message, setMessage] = useState(\"Erro crítico!\");\n    const[signupSuccess, setSuccess] = useState(false);\n    const[snack, showSnack] = useState(false);\n\n    const redirectLogin = () => {\n      history.push(\"/login\");\n    }\n    \n    const sendSignup = async () => {\n        const url = \"/api/user/signup\";\n        const options = {\n            method: 'POST',            \n            headers: { \n                'Content-Type': 'application/json;charset=utf-8' \n            },    \n            body: JSON.stringify({\n                \"name\": values.name,\n                \"email\": values.email,                \n                \"username\": values.username,\n                \"password\": values.password,\n                \"confirmPassword\": values.confirmPassword\n            })\n        };\n        \n        await fetch(url, options)\n        .then(\n          (res) => {\n            switch (res.status) {\n              case 201:\n                setSuccess(true);\n                setMessage(\"Usuário criado com sucesso! Redirecionando para login...\")\n                setTimeout(() => { history.push('/login'); }, 2000);\n                break;\n              case 400:\n                setSuccess(false);\n                setMessage(\"Dados da solicitação estão incorretos! Por favor, verifique-os e tente novamente!\")\n                break;\n              case 500:\n                setSuccess(false);\n                setMessage(\"Erro inesperado do servidor! - 500\");\n                break;\n              default:\n                setSuccess(false);\n                setMessage(\"Erro inesperado: \" + res.status);\n            }\n          },\n          (error) => {\n            setSuccess(false);\n            setMessage(error.message);\n          }                             \n        );\n\n        showSnack(true);\n    };\n     \n  return(\n      <Container component=\"main\" maxWidth=\"xs\">\n          <div className={classes.paper}>\n              <Avatar \n                className={classes.logo}\n                src={logo}\n              />\n              <Typography variant=\"h4\">\n                  Cadastrar novo usuário\n              </Typography>\n              <Formik\n                initialValues={{}}\n                validationSchema={Yup.object({\n                  name: Yup.string()\n                    .max(60, \"Deve ter 60 caracteres ou menos\")\n                    .matches(/^[a-zA-Z]+\\s[a-zA-Z]+$/, \"Nome inválido\")\n                    .required(\"Obrigatório\"),\n                  username: Yup.string()\n                    .min(6, \"Mínimo de 6 letras\")\n                    .max(30, \"Máximo de 30 letras\")\n                    .required(\"Obrigatório\"),\n                  email: Yup.string()\n                    .email(\"E-mail inválido\")\n                    .required(\"Obrigatório\"),\n                  password: Yup.string()\n                    .min(8, \"Mínimo de 8 caracteres\")\n                    .max(64, \"Máximo de 64 caracteres\")\n                    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[*.!@$%#^&(){}\\[\\]:;<>,.?~+-/|/=/\\\\]).*$/, \"Senha deve ter maiúsculas, minúsculas, números e caracteres especiais\")\n                    .required(\"Obrigatório\"),\n                  confirmPassword: Yup.string()\n                    .oneOf([Yup.ref('password'), null], 'Senha e confirmação não são iguais')\n                    .required(\"Obrigatório\")\n                })}\n                onSubmit={async (values, { setSubmitting } ) => {\n                  setValues(values);\n                  await sendSignup();\n                  setSubmitting(false);                  \n                }}   \n              >\n                {({ submitForm, isSubmitting}) => (\n                  <Form className={classes.form}>\n                    <Field\n                      autoFocus\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"name\"\n                      type=\"text\"\n                      label=\"Nome e Sobrenome\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"email\"\n                      type=\"email\"\n                      label=\"Endereço de e-mail\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"username\"\n                      type=\"text\"\n                      label=\"Nome de Usuário\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Senha\"\n                    />\n                    <Field\n                      fullWidth\n                      required\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      component={MuiTextField}\n                      name=\"confirmPassword\"\n                      type=\"password\"\n                      label=\"Confirme sua senha\"\n                    />\n                  { isSubmitting && <LinearProgress />}\n                    <Button\n                      className={classes.submit}\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      type=\"submit\"\n                    >\n                      Cadastrar\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\" onClick={redirectLogin}>\n                    Voltar para Login\n                  </Link>\n                </Grid>\n              </Grid>\n              <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n                      {signupSuccess\n                          ? <Alert severity=\"success\">{message}</Alert>\n                          : <Alert severity=\"error\" >{message}</Alert>\n                      }\n              </Snackbar>\n          </div>            \n      </Container>\n  );\n}\n\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Alert from '../components/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Snackbar,  Button, Grid, FormControl, InputLabel, Select, MenuItem, FormHelperText, TextField, FormControlLabel, Checkbox, Box, Switch} from '@material-ui/core';\nimport { ArrowBack, Save } from '@material-ui/icons';\n\nimport { Link, Route } from 'react-router-dom';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport addDays from 'date-fns/addDays';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\n\n// Styling\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n        display:'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },    \n    header: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    form: {\n        marginTop: theme.spacing(1),\n    },\n    formItems: {\n        padding: theme.spacing(1),\n    },  \n  }));\n\nexport default function Shift(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    \n    // Snack state\n    const [snack, showSnack] = useState(false);\n    const successMsg = \"Escala(s) salva!\";\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [shiftSuccess, setSuccess] = useState(false);\n    \n    // Shift state\n    const [unavailableDate, setUnavailableDate] = useState(new Date());\n    const [boardingDate, setBoardingDate] = useState(new Date());\n    const [leavingDate, setLeavingDate] = useState(new Date());\n    const [availableDate, setAvailableDate] = useState(new Date());\n    const [cycleDays, setCycleDays] = useState(0);\n    const [useCycle, setUseCycle] = useState(false);\n    const [repeat, setRepeat] = useState(0);\n  \n    // Handlers\n    const handleUseCycle = (event) => {\n        let checked = event.target.checked;\n        setUseCycle(checked);\n    }\n\n    const handleLeavingDate = (date) => {\n        setLeavingDate(date);\n        if (!useCycle) {\n            setCycleDays(differenceInCalendarDays(date, boardingDate));\n        }\n    }\n\n    const handleRepeat = (event) => {\n        setRepeat(event.target.value);\n    }\n\n    const handleCycleDays = (event) =>  {\n        let days = event.target.value;\n        if (days < 0) days = 0;\n\n        setCycleDays(days);\n\n        // Adds the cycle days to both leaving date and available date\n        let newDate = calculateCycle(days);\n        setLeavingDate(newDate);\n        setAvailableDate(newDate);        \n    }\n\n    const calculateCycle = (cycleValue) => {\n        const result = addDays(boardingDate, cycleValue);       \n        return result;\n    }\n\n    const submit = (event) => {\n        event.preventDefault();\n        validate();\n\n        fetch(\"/api/shift/add\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'Authorization': sessionStorage.getItem(\"token\")\n            },\n            body: JSON.stringify({\n                \"unavailabilityStartDate\": unavailableDate,\n                \"boardingDate\": boardingDate,\n                \"leavingDate\": leavingDate,\n                \"unavailabilityEndDate\": availableDate,\n                \"cycleDays\": cycleDays,\n                \"repeat\": repeat\n            })\n        })\n            .then(res => {\n                if (res.ok) {\n                    setSuccess(true);\n                    showSnack(true);\n                    setTimeout(() => { history.push('/home'); }, 2000);\n                } else if (res.status === 403) {\n                    history.push('/login');                    \n                    throw new Error('Usuário não logado!');\n                } else {\n                    throw res;\n                }\n            })\n            .catch(err => {\n                setErrorMsg(err.message);\n                showSnack(true);\n            });\n    };\n\n    const validate = () => {\n        // TODO - validation\n    }\n\n    const closeSnack = () => {\n        showSnack(false);\n        if (shiftSuccess) {\n            history.goBack();\n        }\n    }\n\n    return (\n        <Container component=\"main\">\n            <div>\n                <AppBar\n                    className={classes.appBar}\n                    position=\"absolute\" \n                >\n                    <Toolbar>\n                        <IconButton\n                            className={classes.menuButton}\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"go back\"\n                            onClick={history.goBack}                           \n                        >\n                            <ArrowBack />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title} >\n                            Escala    \n                        </Typography>\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<Save />}\n                            onClick={submit}\n                        >\n                            Salvar\n                        </Button>                    \n                    </Toolbar>\n                </AppBar>\n            </div>\n            <div className={classes.header} />\n            <Grid container \n                direction='column'\n                justify='center'\n                className={classes.form}                \n            >\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                        className={classes.formItems}\n                        margin=\"normal\"\n                        id=\"date-unavailable\"\n                        label=\"Indisponível a partir de\"\n                        format=\"dd/MM/yyyy\"\n                        value={unavailableDate}\n                        onChange={setUnavailableDate}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                    <KeyboardDatePicker\n                        className={classes.formItems}\n                        margin=\"normal\"\n                        id=\"date-boarding\"\n                        label=\"Data de embarque\"\n                        format=\"dd/MM/yyyy\"\n                        value={boardingDate}\n                        onChange={setBoardingDate}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                    <KeyboardDatePicker\n                        className={classes.formItems}\n                        disabled={useCycle}\n                        margin=\"normal\"\n                        id=\"date-leaving\"\n                        label=\"Data de desembarque\"\n                        format=\"dd/MM/yyyy\"\n                        value={leavingDate}\n                        onChange={handleLeavingDate}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                    <KeyboardDatePicker\n                        className={classes.formItems}\n                        disabled={useCycle}\n                        margin=\"normal\"\n                        id=\"date-available\"\n                        label=\"Disponivel a partir de:\"\n                        format=\"dd/MM/yyyy\"\n                        value={availableDate}\n                        onChange={setAvailableDate}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />                          \n                </MuiPickersUtilsProvider>\n                <Grid container direction=\"row\" className={classes.formItems}>\n                    <FormControlLabel       \n                        control={\n                        <Switch\n                            checked={useCycle} \n                            onChange={handleUseCycle}\n                            name=\"checked cycle\"\n                            color=\"primary\"\n                        />\n                        }\n                        \n                    />                    \n                    <TextField\n                        disabled={!useCycle}          \n                        id=\"cycle-days\"\n                        label=\"Nº de dias embarcado\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        value={cycleDays}\n                        onChange={handleCycleDays}\n                    />\n                </Grid>\n                <FormControl className={classes.formItems}>\n                    <InputLabel id=\"repeat-cycle-label\"\n                    className={classes.formItems}>Repetir</InputLabel>\n                    <Select\n                        labelId=\"repeat-cycle-label\"\n                        id=\"repeat-cycle-select\"\n                        value={repeat}\n                        onChange={handleRepeat}\n                    >\n                        <MenuItem value={0}>Não</MenuItem>\n                        <MenuItem value={1}>1x</MenuItem>\n                        <MenuItem value={2}>2x</MenuItem>\n                        <MenuItem value={3}>3x</MenuItem>\n                        <MenuItem value={4}>4x</MenuItem>\n                        <MenuItem value={5}>5x</MenuItem>\n                        <MenuItem value={6}>6x</MenuItem>\n                        <MenuItem value={7}>7x</MenuItem>\n                        <MenuItem value={8}>8x</MenuItem>\n                        <MenuItem value={9}>9x</MenuItem>\n                        <MenuItem value={10}>10x</MenuItem>\n                        <MenuItem value={11}>11x</MenuItem>\n                        <MenuItem value={12}>12x</MenuItem>\n                    </Select>\n                    <FormHelperText>Selecione por quantas vezes repetir a escala</FormHelperText>\n                </FormControl>\n            </Grid>\n            <Snackbar open={snack} autoHideDuration={3000} onClose={closeSnack} >\n                        {shiftSuccess\n                            ? <Alert severity=\"success\">{successMsg}</Alert>\n                            : <Alert severity=\"error\" >{errorMsg}</Alert>\n                        }\n            </Snackbar>\n        </Container>\n    );\n}","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Link, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    maxWidth: 500,\n    alignContent: 'center'\n  },\n  header: {\n    marginBottom: theme.spacing(3),\n  },\n  submit: {\n    marginTop: theme.spacing(1)\n  },\n  footer: {\n    marginTop: theme.spacing(2)\n  }\n\n}))\n\nexport default function Recovery() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [input, setInput] = useState(\"\");\n\n  // Dialog state\n  const [open, setOpen] = useState(false);\n  \n  const successMsg = \"Um e-mail com instruções para troca de senha foi enviado para o e-mail de recuperação de sua conta.\" +\n   \" Por favor, cheque sua caixa de e-mail e siga o link fornecido para continuar o procedimento.\";\n  \n  const errorMsg = \"Não foi possível enviar a recuperação! Por favor, recarregue a página e tente novamente\";\n  \n  const [dialog, setDialog] = useState({\n    title: \"Ops...\",\n    message: errorMsg\n  })\n\n  // Handlers\n  const redirectLogin = () => {\n    history.push('/login');\n  }\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  }\n\n  const submit = async () => {\n    await fetch(\"/api/user/recover?user=\" + input, {\n      method: 'POST'\n    })\n    .then(\n      (res) => {\n        if (res.ok) {\n          setDialog({\n            title: \"Recuperação em andamento!\",\n            message: successMsg\n          })\n        }\n      }, \n      (error) => {\n      }\n    )\n\n    setOpen(true);\n  }\n\n  const closeDialog = () => {\n    setOpen(false);\n  }\n\n  return (\n    <Container className={classes.paper}>\n      <Grid container direction=\"column\">\n        <Grid item xs className={classes.header}>\n          <Typography  variant=\"h5\">\n            Recuperação de conta\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography>\n            Digite seu nome de usuário para recuperação de conta:\n          </Typography>\n          <TextField \n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"forgot-input\"\n            label=\"Nome de usuário para recuperação\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={input}\n            onChange={handleChange}\n          />\n          <Button className={classes.submit} variant=\"contained\" color=\"primary\" onClick={submit} fullWidth>\n            Enviar \n          </Button>\n        </Grid>\n        <Grid item xs className={classes.footer}>\n          <Link href=\"#\" variant=\"body2\" onClick={redirectLogin}>\n            Retornar para Login\n          </Link>\n        </Grid>\n        <Dialog open={open} fullWidth>\n          <DialogTitle>{dialog.title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {dialog.message}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDialog}>OK</Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    </Container>\n\n  )\n}","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from \"yup\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(6),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  header: {\n    marginBottom: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  footer: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\n\nexport default function PasswordReset() {\n  const classes = useStyles();  \n  const location = useLocation();\n  const history = useHistory();\n\n  // Reads reset token from path\n  const token = new URLSearchParams(location.search).get(\"reset\");\n  \n  // Form state\n  const [formState, setState] = useState({\n    username: \"\",\n    password: \"\",\n    confirm: \"\",\n  });\n\n  const [success, setSuccess] = useState(false);\n\n  // Dialog state\n  const [open, setOpen] = useState(false);\n  const [dialog, setDialog] = useState({\n    title: \"Ops...\",\n    message: \"Um erro aconteceu! Contate-nos para mais informações!\"\n  })\n\n  const send = async () => {\n    \n    await fetch(\"/api/user/resetPassword\", {\n      method: 'POST',\n      headers: {\n        \"reset\": token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: formState.username,\n        password: formState.password,\n        confirmPassword: formState.confirm\n      })\n    })\n    .then(\n      (res) => {\n        switch (res.status) {\n          case 200:\n            setDialog({\n              title: \"Sucesso!\",\n              message: \"Sua senha foi redefinida. Por favor, efetue o login normalmente!\"\n            })\n            setOpen(true);\n            setSuccess(true);\n            break;\n          case 403:\n            history.push(\"/login\");\n            break;\n          case 400:\n            setOpen(true);\n            break;\n          default:\n            setDialog({\n              ...dialog,\n              message: \"Algo deu errado em sua solicitação! Por favor, atualize a página e tente novamente!\"\n            })\n            setOpen(true);\n            break;\n        }\n      }, \n      (error) => {\n        setDialog({\n          ...dialog,\n          message: \"Algo deu errado em nosso servidor! Por favor, atualize a página e tente novamente!\"\n        })\n        setOpen(true);\n      }\n    );\n    \n  }\n\n  const closeDialog = () => {\n    if (success) {\n      history.push(\"/login\");\n    }\n    setOpen(false);\n  }\n\n  // Redirects to login page if no token is provided\n  if (token === null) {\n    history.push(\"/login\");\n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Typography variant=\"h4\">Recuperação de senha</Typography>\n        <Formik\n          initialValues={{}}\n          validationSchema={Yup.object({\n            username: Yup.string()\n              .required(\"Obrigatório\"),\n            password: Yup.string()\n              .min(8, \"Mínimo de 8 caracteres\")\n              .max(64, \"Máximo de 64 caracteres\")\n              .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[*.!@$%#^&(){}\\[\\]:;<>,.?~+-/|/=/\\\\]).*$/, \"Senha deve ter maiúsculas, minúsculas, números e caracteres especiais\")\n              .required(\"Obrigatório\"),\n            confirm: Yup.string()\n              .oneOf([Yup.ref('password'), null], 'Senha e confirmação não são iguais')\n              .required(\"Obrigatório\")\n          })}\n          onSubmit={async (values, { setSubmitting } ) => {\n            setState(values);\n            await send();\n            setSubmitting(false);\n          }}\n        >\n          {({ submitForm, isSubmitting }) => (\n            <Form className={classes.form}>\n              <Field\n                fullWidth\n                required\n                margin=\"normal\"\n                variant=\"outlined\"\n                component={TextField}\n                name=\"username\"\n                type=\"text\"\n                label=\"Nome de Usuário\"\n              />\n              <Field\n                fullWidth\n                required\n                margin=\"normal\"\n                variant=\"outlined\"\n                component={TextField}\n                name=\"password\"\n                type=\"password\"\n                label=\"Senha\"\n              />\n              <Field\n                fullWidth\n                required\n                margin=\"normal\"\n                variant=\"outlined\"\n                component={TextField}\n                name=\"confirm\"\n                type=\"password\"\n                label=\"Confirme sua senha\"\n              />\n              { isSubmitting && <LinearProgress />}\n              <Button\n                className={classes.submit}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n              >\n                Enviar\n              </Button>\n            </Form>\n          )}\n        </Formik>\n        <Dialog open={open} fullWidth>\n          <DialogTitle>\n            {dialog.title}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {dialog.message}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDialog}>OK</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </Container>\n    )\n}","import React from 'react';\nimport Home from './Home.js';\nimport Login from './auth/Login.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Signup from './auth/Signup.js';\nimport Shift from './shifts/Shift.js';\nimport Recovery from './auth/Recovery.js';\nimport PasswordReset from './auth/PasswordReset.js';\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      black:\"#000\",\n      white:\"#fff\"\n    },\n    background: {\n      paper: \"rgba(235, 246, 249, 1)\",\n      default: \"#fafafa\"\n    },\n    primary: {\n      light: \"#7986cb\",\n      main: \"rgba(2, 27, 154, 1)\",\n      dark:\"#303f9f\",\n      contrastText:\"#fff\"\n    },\n    secondary: {\n      light: \"#ff4081\",\n      main: \"rgba(182, 128, 2, 1)\",\n      dark: \"#c51162\",\n      contrastText: \"#fff\"\n    },\n    error: {\n      light: \"#e57373\",\n      main:\"#f44336\",\n      dark: \"#d32f2f\",\n      contrastText:\"#fff\"\n    },\n    text: {\n      primary: \"rgba(0, 0, 0, 0.87)\",\n      secondary: \"rgba(0, 0, 0, 0.54)\",\n      disabled: \"rgba(0, 0, 0, 0.38)\",\n      hint:\"rgba(0, 0, 0, 0.38)\"\n    }\n  },\n  typography: {\n    button: {\n      fontSize: \"1rem\",\n      fontWeight: \"500\",\n      letterSpacing: \"0.02857em\"\n    }\n  }\n})\n\n\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = sessionStorage.getItem('token');\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\nexport default function App() {\n\n  // Main routing for the application\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router>\n          <Switch>\n            <PrivateRoute exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </PrivateRoute> \n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <PrivateRoute path=\"/home\">\n              <Home />\n            </PrivateRoute>        \n            <PrivateRoute exact path=\"/shift\">\n              <Shift />\n            </PrivateRoute>\n            <Route exact path=\"/recovery\">\n              <Recovery />\n            </Route>\n            <Route exact path=\"/changePassword\"><PasswordReset /></Route>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}